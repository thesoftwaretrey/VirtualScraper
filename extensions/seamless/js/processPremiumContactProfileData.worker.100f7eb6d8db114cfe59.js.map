{"version":3,"file":"js/processPremiumContactProfileData.worker.100f7eb6d8db114cfe59.js","mappings":"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","sources":["webpack://@seamless/chrome-extension/../../node_modules/comlink/dist/esm/comlink.mjs","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/identifiers.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/contactInfo.js","webpack://@seamless/chrome-extension/./src/utils/data.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/formatProfilePicture.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/industries.js","webpack://@seamless/chrome-extension/../../modules/core/src/utils/ensureArray.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/experience.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/occupation.js","webpack://@seamless/chrome-extension/./src/utils/getCurrentPositions.js","webpack://@seamless/chrome-extension/./src/utils/coreDupes/isObject.js","webpack://@seamless/chrome-extension/./src/utils/hasResults.js","webpack://@seamless/chrome-extension/./src/utils/coreDupes/isEmpty.js","webpack://@seamless/chrome-extension/./src/utils/isValidString.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/createSeamlessContact.js","webpack://@seamless/chrome-extension/./src/utils/collection.js","webpack://@seamless/chrome-extension/./src/utils/isValidContact.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/processPremiumContactProfileData.worker.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactAuthResult.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactProfile.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactRecommendations.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactRecommendedLeads.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactSimilarLeads.js"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","// ie., https://www.linkedin.com/in/annieheckenberger/\nconst STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/in\\/(?<publicIdentifier>[\\w_À&&-ÿ%-][^/?]+)\\/?/i;\n\n// Examples:\n// https://www.linkedin.com/sales/company/130757/insights?_ntb=fAcMJ6%2FtREiNqQyKnKT4Xg%3D%3D\n// https://www.linkedin.com/sales/people/ACwAAAAmVFgBoPQGSO_l_3cwHlpNdOiHdaW2pAQ,NAME_SEARCH,L7q4?_ntb=%C2%A6%15O%09%C3%92%C2%AAA%C2%B0%C2%AF%C3%90%20C%C3%BFk%1D%C2%9A\n// https://www.linkedin.com/sales/lead/ACwAAAAmVFgBoPQGSO_l_3cwHlpNdOiHdaW2pAQ,NAME_SEARCH,L7q4?_ntb=%C2%A6%15O%09%C3%92%C2%AAA%C2%B0%C2%AF%C3%90%20C%C3%BFk%1D%C2%9A\nconst PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/sales\\/(people|lead)\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^,?/]+)?/i;\n\n// ie., https://www.linkedin.com/company/saatchi-&-saatchi-wellness/\nconst STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/company\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^/?]+)\\/?/i;\n\n// ie., /sales/company/610608?_ntb=fAcMJ6%2FtREiNqQyKnKT4Xg%3D%3D\nconst PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/sales\\/company\\/(?<publicIdentifier>[\\d][^/?]+)\\/?/i;\n\n// Examples:\n// https://www.linkedin.com/talent/profile/AEMAAAB_kGABaRsOMBn6bfW1iw_90slztzfmdys?project=400938220&lipi=urn%3Ali%3Apage%3Ad_talent_projectsHome%3B%2BMSr4USfTHyZnlrgcgRpVw%3D%3D\n// /talent/profile/AEMAAAB_kGABaRsOMBn6bfW1iw_90slztzfmdys?project=400938220&lipi=urn%3Ali%3Apage%3Ad_talent_projectsHome%3B%2BMSr4USfTHyZnlrgcgRpVw%3D%3D\n// https://www.linkedin.com/talent/hire/400938220/manage/all/profile/AEMAAAEzgEcBNTs49BJySGuQVAAZ2K9CECIwpT0?project=400938220\nconst RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:\\/profile)\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^?/]+)\\/?/i;\n\n// urn:li:fs_salesCompany:76390\n// urn:li:member:159784268286\n// urn:li:fsd_entityResultViewModel:(urn:li:fsd_company:3776,SEARCH_SRP)\nconst GET_MEMBER_ID_FROM_URN_REG_EXP =\n\t/(?:\\w+:(\\(?))+(?::[\\w_]+(?:member|company):)?(?<memberId>[\\d]+)?/i;\n\n// Examples:\n// urn:li:fs_salesProfile:(ACwAAABXB8YBL-pY0m1uk-T5PnxhaGO1zKqmc8U,NAME_SEARCH,ecVP)\n// urn:li:fsd_entityResultViewModel:urn:li:fsd_profile:ACoAAA2xYEwBskLoVyr5rCQ4PWpslakEhwAtgXc // New Community search result entityUrn\n// urn:li:fsd_profileCard:(ACoAAAAD8nEBVA4J_Y8kdohsFvb49-Gritg17kQ,EXPERIENCE,en_US)\nconst SALES_NAV_ID_FROM_URN_REG_EXP =\n\t/(?:\\w+:)+fs(?:d)?_(?:sales|mini|profile)?(Profile|Card):(?:\\()?(?<salesNavId>[\\w_À&-ÿ%-][^,]+)?,?(?<type>.[^,]+)?/i;\n\n// ie., urn:li:ts_profile:AEMAAABRsqUB-vVYVqCYoLwKjsFNBZFF_I4IYdw\nconst RECRUITER_CONTACT_FROM_URN_REG_EXP =\n\t/(?:\\w+:)+(ts_profile|ts_linkedin_member_profile):\\(?(?<recruiterId>[\\w_À&-ÿ%-][^,?]+)?/i;\n\n// TODO: this is getting big, refactor...how to pull key matchers\n// from central location instead of appending here\nconst profileUrlIdModuleRegexMap = {\n\tpremiumCompanySearch: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyProfile: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumSavedAccounts: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyRecommendedLeads:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyAccountMapEntries:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyPeopleAlsoViewed:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tpremiumSavedLeads: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSavedSearch: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSearch: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactProfile: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactRecommendations:\n\t\tPREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactRecommendedLeads:\n\t\tPREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSimilarLeads: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tstandardCompanySearch: STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardCompanyProfile: STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardCompanyPeopleYouMayKnow:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardBlendedSearchCompany:\n\t\tSTANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tstandardContactProfile: STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactPeopleYouMayKnow:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactPeopleAlsoViewed:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactRecommendationsReceived:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactRecommendationsGiven:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactSearch: STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardBlendedSearchContact:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\trecruiterContactProfile: RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactRecommendations:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactSimilarProfiles:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactSearch: RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterSavedContactSearch:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n};\n\nexport function getIdFromProfileUrl(profileUrl, module) {\n\tif (!profileUrl || !module) {\n\t\treturn null;\n\t}\n\n\tconst matchRegExp = profileUrlIdModuleRegexMap[module];\n\tconst publicIdentifierMatchObj = profileUrl.match(matchRegExp);\n\tconst profileId = publicIdentifierMatchObj?.groups?.publicIdentifier;\n\treturn profileId ? decodeURI(profileId) : null;\n}\n\nexport function getMemberIdFromUrn(urn) {\n\tconst memberIdMatchObj = urn.match(GET_MEMBER_ID_FROM_URN_REG_EXP);\n\treturn memberIdMatchObj?.groups?.memberId;\n}\n\nexport function getSalesNavIdFromUrn(urn) {\n\tconst salesNavIdMatchObj = urn.match(SALES_NAV_ID_FROM_URN_REG_EXP);\n\treturn salesNavIdMatchObj?.groups?.salesNavId;\n}\n\nexport function getRecruiterIdFromUrn(urn) {\n\tconst recruiterIdMatchObj = urn.match(RECRUITER_CONTACT_FROM_URN_REG_EXP);\n\treturn recruiterIdMatchObj?.groups?.recruiterId;\n}\n\n// parses the salesnav style urn now used in new li basic graphQL data to get the id and data type from it.\n// creating this as a separate function from getSalesNavIdFromUrn for now as we try to move towards a new\n// structure of processing the data.\nexport function parseElementUrn(urn) {\n\tconst elementUrnMatchObj = urn.match(SALES_NAV_ID_FROM_URN_REG_EXP);\n\tconst { salesNavId, type } = elementUrnMatchObj?.groups || {};\n\treturn {\n\t\tliSalesNavId: salesNavId || '',\n\t\telementType: type || '',\n\t};\n}\n","import isEmpty from 'utils/coreDupes/isEmpty';\nimport isObject from 'utils/coreDupes/isObject';\n\n/**\n * Email Address\n */\n\n/**\n * Takes a number of email address response types from a LinkedIn response and returns just the email address\n * @param {Array.<Object>} emails - Several different objects with a nested email address\n * @param {string} primaryEmail - When sometimes an email address is passed down without other LinkedIn display data\n * @returns {string} The deduced email address\n */\nexport function formatEmailAddress(emails, primaryEmail) {\n\ttry {\n\t\tlet emailAddress;\n\n\t\tif (primaryEmail?.length) {\n\t\t\temailAddress = primaryEmail;\n\t\t} else if (emails && typeof emails === 'string' && emails.length) {\n\t\t\temailAddress = emails;\n\t\t} else if (emails?.emailAddress) {\n\t\t\temailAddress = emails.emailAddress;\n\t\t} else if (Array.isArray(emails) && emails.length) {\n\t\t\temailAddress = emails[0].emailAddress;\n\t\t}\n\n\t\treturn emailAddress;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n * Location\n */\n\nexport const cleanLocationString = (locationString) => {\n\treturn (\n\t\tlocationString\n\t\t\t// Replace line breaks\n\t\t\t.replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n\t\t\t.replace(/^Greater /, '')\n\t\t\t.replace(/ Area$/, '')\n\t\t\t.replace(/ Metropolitan$/, '')\n\t);\n};\n\nconst LOCATION_OBJECT_KEYS = [\n\t'line1',\n\t'line2',\n\t'city',\n\t'geographicArea',\n\t'postalCode',\n\t'country',\n];\nfunction hasValidLocationKeys(location) {\n\treturn (\n\t\tisObject(location) &&\n\t\t!isEmpty(location) &&\n\t\tObject.keys(location).some((k) => LOCATION_OBJECT_KEYS.includes(k))\n\t);\n}\n\nexport function formatCompanyLocationObject(location) {\n\ttry {\n\t\tlet street1;\n\t\tlet street2;\n\t\tlet city;\n\t\tlet state;\n\t\tlet postCode;\n\t\tlet country;\n\n\t\tif (location && hasValidLocationKeys(location)) {\n\t\t\t({\n\t\t\t\tline1: street1,\n\t\t\t\tline2: street2,\n\t\t\t\tcity,\n\t\t\t\tgeographicArea: state,\n\t\t\t\tpostalCode: postCode,\n\t\t\t\tcountry,\n\t\t\t} = location);\n\t\t}\n\n\t\treturn {\n\t\t\tstreet1,\n\t\t\tstreet2,\n\t\t\tcity,\n\t\t\tstate,\n\t\t\tpostCode,\n\t\t\tcountry,\n\t\t};\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function getCompanyLocationStringFromObject(locationObject) {\n\ttry {\n\t\tlet fullString;\n\t\tif (!isEmpty(locationObject)) {\n\t\t\tconst {\n\t\t\t\tstreet1,\n\t\t\t\tstreet2 = '',\n\t\t\t\tcity,\n\t\t\t\tstate,\n\t\t\t\tpostCode,\n\t\t\t\tcountry,\n\t\t\t} = locationObject;\n\t\t\tfullString = [street1, street2, city, state, postCode, country]\n\t\t\t\t.map((s) => s && s.trim())\n\t\t\t\t.filter((s) => !!s)\n\t\t\t\t.join(' ');\n\t\t}\n\n\t\tif (typeof fullString === 'string' && !fullString.length) {\n\t\t\tfullString = undefined;\n\t\t}\n\n\t\treturn fullString;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n * Social\n */\n\nexport function formatContactSocial({\n\twebsites = [],\n\tsocialHandles = [],\n\ttwitterHandles = [],\n}) {\n\ttry {\n\t\tlet social = [];\n\n\t\tif (websites?.length) {\n\t\t\tconst contactWebsites = websites\n\t\t\t\t.map(\n\t\t\t\t\t(w) =>\n\t\t\t\t\t\tw && {\n\t\t\t\t\t\t\ttype: w.type?.category\n\t\t\t\t\t\t\t\t? w.type.category\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\turl: w.url,\n\t\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.filter((w) => !!w);\n\t\t\tif (contactWebsites?.length) {\n\t\t\t\tcontactWebsites.forEach((website) => social.push(website));\n\t\t\t}\n\t\t}\n\n\t\tif (socialHandles?.length) {\n\t\t\tconst contactSocialHandles = socialHandles.map(\n\t\t\t\t(t) =>\n\t\t\t\t\tt?.type?.length &&\n\t\t\t\t\tt.type.toLowerCase() === 'twitter' && {\n\t\t\t\t\t\ttype: 'social',\n\t\t\t\t\t\tsocialType: 'twitter',\n\t\t\t\t\t\turl: `http://twitter.com/${t.name}`,\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (contactSocialHandles?.length) {\n\t\t\t\tsocial.push(contactSocialHandles);\n\t\t\t}\n\t\t}\n\n\t\tif (twitterHandles?.length) {\n\t\t\tconst contactTwitterHandles = twitterHandles.map(\n\t\t\t\t(t) =>\n\t\t\t\t\tt?.name && {\n\t\t\t\t\t\ttype: 'social',\n\t\t\t\t\t\tsocialType: 'twitter',\n\t\t\t\t\t\turl: t.name.includes('http')\n\t\t\t\t\t\t\t? t.name\n\t\t\t\t\t\t\t: `http://twitter.com/${t.name}`,\n\t\t\t\t\t}\n\t\t\t);\n\t\t\tif (contactTwitterHandles?.length) {\n\t\t\t\tsocial.push(contactTwitterHandles);\n\t\t\t}\n\t\t}\n\n\t\t// if (picture && picture.length) {\n\t\t// \tsocial.push({\n\t\t// \t\ttype: 'image',\n\t\t// \t\turl: picture,\n\t\t// \t\tsocialType: 'LinkedIn',\n\t\t// \t});\n\t\t// }\n\n\t\tif (social?.length) {\n\t\t\tsocial = social.filter((s) => s && s.url);\n\t\t}\n\n\t\treturn social;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n","const cleanEmptyNullData = (data) => {\n\tif (!data) {\n\t\treturn {};\n\t}\n\n\tconst cleanedData = data;\n\tObject.entries(cleanedData).forEach(([k, v]) => {\n\t\tif (v && typeof v === 'object') {\n\t\t\tcleanEmptyNullData(v);\n\t\t}\n\n\t\tif (\n\t\t\t(v && typeof v === 'object' && !Object.keys(v).length) ||\n\t\t\tv === null ||\n\t\t\tv === undefined\n\t\t) {\n\t\t\tif (Array.isArray(cleanedData)) {\n\t\t\t\tcleanedData.splice(k, 1);\n\t\t\t} else {\n\t\t\t\tdelete cleanedData[k];\n\t\t\t}\n\t\t}\n\t});\n\n\treturn cleanedData;\n};\n\nconst cleanLocationString = (locationString) => {\n\treturn (\n\t\tlocationString\n\t\t\t// Replace line breaks\n\t\t\t.replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n\t\t\t.replace(/^Greater /, '')\n\t\t\t.replace(/ Area$/, '')\n\t\t\t.replace(/ Metropolitan$/, '')\n\t);\n};\n\nconst cleanUrl = (url) => {\n\tlet newUrl = url && typeof url === 'string' && url.trim();\n\tif (!newUrl) {\n\t\t// return original data\n\t\treturn url;\n\t}\n\n\tif (/^https?:\\/([^/].*|\\/\\/+.+)$/i.test(newUrl)) {\n\t\tnewUrl = newUrl.replace(/:\\/+/, '://');\n\t}\n\n\treturn newUrl;\n};\n\nexport { cleanEmptyNullData, cleanLocationString, cleanUrl };\n","import { cleanUrl } from 'utils/data';\n\nconst formatProfilePicture = (profilePicture) => {\n\ttry {\n\t\tlet picture = profilePicture;\n\n\t\tif (picture && typeof picture === 'object') {\n\t\t\tconst { artifacts, rootUrl } = picture;\n\t\t\tif (\n\t\t\t\trootUrl?.length &&\n\t\t\t\trootUrl.includes('http') &&\n\t\t\t\tartifacts &&\n\t\t\t\tArray.isArray(artifacts)\n\t\t\t) {\n\t\t\t\tpicture =\n\t\t\t\t\trootUrl +\n\t\t\t\t\tartifacts[artifacts.length - 1]\n\t\t\t\t\t\t.fileIdentifyingUrlPathSegment;\n\t\t\t} else if (\n\t\t\t\t(!rootUrl || !rootUrl.length) &&\n\t\t\t\tartifacts?.length &&\n\t\t\t\tartifacts[artifacts.length - 1].fileIdentifyingUrlPathSegment &&\n\t\t\t\tartifacts[\n\t\t\t\t\tartifacts.length - 1\n\t\t\t\t].fileIdentifyingUrlPathSegment.includes('http')\n\t\t\t) {\n\t\t\t\tpicture =\n\t\t\t\t\tartifacts[artifacts.length - 1]\n\t\t\t\t\t\t.fileIdentifyingUrlPathSegment;\n\t\t\t}\n\n\t\t\tif (!picture || !picture.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tpicture = picture && cleanUrl(picture);\n\t\treturn picture;\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n};\n\nexport default formatProfilePicture;\n","const formatContactIndustries = (industries = []) => {\n\ttry {\n\t\tlet formattedIndustries = industries;\n\t\tif (\n\t\t\tformattedIndustries &&\n\t\t\ttypeof formattedIndustries === 'object' &&\n\t\t\t!Array.isArray(formattedIndustries)\n\t\t) {\n\t\t\tformattedIndustries = Object.values(formattedIndustries);\n\t\t}\n\n\t\tformattedIndustries = formattedIndustries.reduce((arr, ind) => {\n\t\t\tconst industry = (\n\t\t\t\t(typeof ind === 'string' && ind) ||\n\t\t\t\tind.name ||\n\t\t\t\t''\n\t\t\t).trim();\n\t\t\tif (industry) {\n\t\t\t\tarr.push(industry);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}, []);\n\t\treturn formattedIndustries.length ? formattedIndustries : null;\n\t} catch (err) {\n\t\treturn null;\n\t}\n};\n\nexport default formatContactIndustries;\n","function ensureArray(val) {\n\tif (Array.isArray(val)) {\n\t\treturn val;\n\t}\n\n\tif (val == null) {\n\t\treturn [];\n\t}\n\n\treturn [val];\n}\n\nexport default ensureArray;\n","import ensureArray from '@seamless/core/src/utils/ensureArray';\n\nexport function formatContactEducations(educations) {\n\ttry {\n\t\treturn educations\n\t\t\t.filter((education) => education)\n\t\t\t.map((education) => {\n\t\t\t\tconst {\n\t\t\t\t\tschoolName: name,\n\t\t\t\t\tdegree,\n\t\t\t\t\tdegreeName,\n\t\t\t\t\tactivities = [],\n\t\t\t\t\tfieldOfStudy,\n\t\t\t\t\tdateRange: {\n\t\t\t\t\t\tstart: { year: dateRangeStartYear } = {},\n\t\t\t\t\t\tend: { year: dateRangeEndYear } = {},\n\t\t\t\t\t} = {},\n\t\t\t\t\tstartedOn: { year: startedOnYear } = {},\n\t\t\t\t\tendedOn: { year: endedOnYear } = {},\n\t\t\t\t\tendDateOn: { year: endDateOnYear } = {},\n\t\t\t\t\tstartDateOn: { year: startDateOnYear } = {},\n\n\t\t\t\t\t// Legacy Recruiter\n\t\t\t\t\tstartDateYear,\n\t\t\t\t\tendDateYear,\n\t\t\t\t} = education;\n\n\t\t\t\tconst startYear =\n\t\t\t\t\tdateRangeStartYear ||\n\t\t\t\t\tstartedOnYear ||\n\t\t\t\t\tstartDateOnYear ||\n\t\t\t\t\tstartDateYear;\n\t\t\t\tconst endYear =\n\t\t\t\t\tdateRangeEndYear ||\n\t\t\t\t\tendedOnYear ||\n\t\t\t\t\tendDateOnYear ||\n\t\t\t\t\tendDateYear;\n\n\t\t\t\tlet { fieldsOfStudy } = education;\n\t\t\t\tif (Array.isArray(fieldsOfStudy) && fieldsOfStudy.length) {\n\t\t\t\t\tfieldsOfStudy = fieldsOfStudy.join();\n\t\t\t\t}\n\n\t\t\t\tconst educationFieldOfStudy =\n\t\t\t\t\ttypeof fieldsOfStudy === 'string'\n\t\t\t\t\t\t? fieldsOfStudy\n\t\t\t\t\t\t: fieldOfStudy;\n\n\t\t\t\tconst formattedEducation = {\n\t\t\t\t\tcompanyName: name,\n\t\t\t\t\tdegreeName: degreeName || degree,\n\t\t\t\t\tactivities: activities && ensureArray(activities),\n\t\t\t\t\tfieldOfStudy: educationFieldOfStudy,\n\t\t\t\t\t...(startYear && { startDate: { year: startYear } }),\n\t\t\t\t\t...(endYear && { endDate: { year: endYear } }),\n\t\t\t\t};\n\n\t\t\t\treturn formattedEducation;\n\t\t\t});\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function formatContactSkills(skills = []) {\n\ttry {\n\t\tconst contactSkills = skills.reduce((skillsArr, skill) => {\n\t\t\tconst _skills = skillsArr;\n\t\t\tif (skill.name) {\n\t\t\t\t_skills.push(skill.name);\n\t\t\t}\n\t\t\treturn _skills;\n\t\t}, []);\n\t\treturn contactSkills;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function formatContactLanguages(languages = []) {\n\ttry {\n\t\tconst contactLanguages = languages.reduce((languagesArr, language) => {\n\t\t\tconst _languages = languagesArr;\n\t\t\tif (language.name) {\n\t\t\t\t_languages.push(language.name);\n\t\t\t}\n\t\t\treturn _languages;\n\t\t}, []);\n\t\treturn contactLanguages;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n","import { getMemberIdFromUrn } from 'workers/processExtractedData/utils/identifiers';\nimport ensureArray from '@seamless/core/src/utils/ensureArray';\nimport { cleanLocationString } from 'utils/data';\n\nconst formatContactPosition = (position) => {\n\tconst {\n\t\tcompany,\n\t\tcompanyName,\n\t\tcompanyUrn,\n\t\tcompanyUrnResolutionResult,\n\t\tcompanyResolutionResult,\n\t\tcurrent,\n\t\tdateRange,\n\t\tdescription,\n\t\t// Used for filtering out duplicates and not filtering out the rare type of same position\n\t\t// but one being \"contract\" to \"full-time\", ie. https://www.linkedin.com/in/alyssa-muscarello/\n\t\t'*employmentType': employmentType,\n\t\tendDateOn,\n\t\tendedOn,\n\t\tlocation,\n\t\tlocationName,\n\t\tstartDateOn,\n\t\tstartedOn,\n\t\ttitle,\n\t} = position;\n\n\tconst { industry, location: companyUrnLocation } =\n\t\tcompanyUrnResolutionResult || {};\n\n\tconst { industries: _industries } = companyResolutionResult || {};\n\n\tconst {\n\t\tstart: _dateRangeStart,\n\t\tstartDate: _dateRangeStartDate,\n\t\tend: _dateRangeEndDate,\n\t\tendDate: _dateRangeEnd,\n\t} = dateRange || {};\n\n\tconst _companyUrn =\n\t\t(company && typeof company === 'string' && company) || companyUrn;\n\n\tconst startDate =\n\t\t_dateRangeStart || _dateRangeStartDate || startDateOn || startedOn;\n\tconst endDate = _dateRangeEnd || _dateRangeEndDate || endDateOn || endedOn;\n\n\tlet _location = location?.displayName ?? location;\n\tif (!_location && companyUrnLocation) {\n\t\t_location = companyUrnLocation;\n\t}\n\n\tif (!_location && locationName) {\n\t\t_location = locationName;\n\t}\n\n\tlet industries;\n\tif (_industries) {\n\t\tindustries = ensureArray(_industries);\n\t} else if (industry) {\n\t\tindustries = ensureArray(industry);\n\t}\n\n\treturn {\n\t\tcompanyName: companyName?.trim(),\n\t\tcurrent,\n\t\tdescription,\n\t\temploymentType,\n\t\tendDate:\n\t\t\tendDate &&\n\t\t\ttypeof endDate === 'object' &&\n\t\t\tObject.keys(endDate).length\n\t\t\t\t? {\n\t\t\t\t\t\t...(endDate.month && { month: endDate.month }),\n\t\t\t\t\t\t...(endDate.year && { year: endDate.year }),\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\tfullString: _location && cleanLocationString(_location),\n\t\tindustries:\n\t\t\tindustries && Array.isArray(industries) && industries.length\n\t\t\t\t? industries\n\t\t\t\t: null,\n\t\tlinkedInCompanyId: _companyUrn && getMemberIdFromUrn(_companyUrn),\n\t\tstartDate:\n\t\t\tstartDate &&\n\t\t\ttypeof startDate === 'object' &&\n\t\t\tObject.keys(startDate).length\n\t\t\t\t? {\n\t\t\t\t\t\t...(startDate.month && { month: startDate.month }),\n\t\t\t\t\t\t...(startDate.year && { year: startDate.year }),\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\ttitleName: title,\n\t};\n};\n\nconst formatOccupationSnippet = (snippetText) => {\n\tlet occupation;\n\n\tconst occupationParts = snippetText.match(\n\t\t/^current:\\s(.*)(\\s-\\s\\.\\.\\..*)?$/i\n\t);\n\tif (occupationParts?.length) {\n\t\t[, occupation] = occupationParts;\n\t}\n\n\treturn occupation;\n};\n\n/**\n * Parses an occupation string into company name and title\n * @param {String} occupation\n * @return {Object} { companyName, title }\n */\nconst parsePositionFromOccupationString = (occupation) => {\n\tconst occupationParts =\n\t\toccupation &&\n\t\t((occupation.indexOf(' at ') > -1 && occupation.split(' at ')) ||\n\t\t\t(occupation.indexOf(' @ ') > -1 && occupation.split(' @ ')) ||\n\t\t\t(occupation.indexOf(' - ') > -1 && occupation.split(' - ')));\n\n\tlet companyName;\n\tlet title;\n\n\tif (!occupationParts) {\n\t\ttitle = occupation;\n\t} else {\n\t\tcompanyName =\n\t\t\t!occupationParts?.length || occupationParts.length === 1\n\t\t\t\t? undefined\n\t\t\t\t: occupationParts.pop();\n\t\ttitle = !occupationParts?.length\n\t\t\t? undefined\n\t\t\t: occupationParts.join(' ');\n\t}\n\n\treturn { companyName, title };\n};\n\nconst getPositionsFromGroupedWorkExperience = (groupedWorkExperience) => {\n\tconst positions = groupedWorkExperience.reduce(\n\t\t(groupedPositionsArr, arrItem) => {\n\t\t\tlet positionsArr = groupedPositionsArr;\n\t\t\tconst groupPositions = arrItem.positions;\n\t\t\tpositionsArr = [...(positionsArr || []), ...(groupPositions || [])];\n\t\t\treturn positionsArr;\n\t\t},\n\t\t[]\n\t);\n\treturn positions;\n};\n\nexport {\n\tformatContactPosition,\n\tformatOccupationSnippet,\n\tparsePositionFromOccupationString,\n\tgetPositionsFromGroupedWorkExperience,\n};\n","export default function getCurrentPositions(positions) {\n\treturn positions.filter((p) => {\n\t\treturn (!p.endDate && p.startDate) || p.current;\n\t});\n}\n","// TODO: This was copied from `@seamless/core` and should be replaced with the version there\n// when that package has better code splitting support, b/c currently the build throws\n// errors when an imported method is used in a web worker.\n//\n// If this is to be imported anywhere other than a web worker, use the module from '@seamless/core'\n\n/**\n * Check if value is the language type of Object\n * @param {any} val - The value to test\n * @return {boolean} - True if the value is an Object, otherwise false.\n * example\n * isObject({}); // -> true\n * isObject([]); // -> true\n */\nconst isObject = (val) => {\n\tconst type = typeof val;\n\treturn !!val && (type === 'function' || type === 'object');\n};\n\nexport default isObject;\n","import isEmpty from 'utils/coreDupes/isEmpty';\n\nconst hasResults = (data) => Array.isArray(data) && !isEmpty(data);\n\nexport default hasResults;\n","// TODO: This was copied from `@seamless/core` and should be replaced with the version there\n// when that package has better code splitting support, b/c currently the build throws\n// errors when an imported method is used in a web worker.\n//\n// If this is to be imported anywhere other than a web worker, use the module from '@seamless/core'\n\nimport isObject from './isObject';\n\n/**\n * Check if value is an empty object or array.\n * @param {any} val - The value to check\n * @return {boolean} - True if the value is empty\n * example\n * isEmpty([]); // -> true\n * isEmpty({}); // -> true\n */\nconst isEmpty = (val) => {\n\tif (val == null) {\n\t\treturn true;\n\t}\n\n\tif (Array.isArray(val)) {\n\t\treturn val.length === 0;\n\t}\n\n\treturn isObject(val) && Object.keys(val).length === 0;\n};\n\nexport default isEmpty;\n","const isValidString = (possibleString) =>\n\tBoolean(typeof possibleString === 'string' && possibleString.length);\n\nexport default isValidString;\n","import { formatEmailAddress } from 'workers/processExtractedData/utils/contactInfo';\nimport formatProfilePicture from 'workers/processExtractedData/utils/formatProfilePicture';\nimport formatContactIndustries from 'workers/processExtractedData/utils/industries';\nimport {\n\tformatContactEducations,\n\tformatContactLanguages,\n\tformatContactSkills,\n} from 'workers/processExtractedData/utils/experience';\nimport {\n\tformatContactPosition,\n\tparsePositionFromOccupationString,\n} from 'workers/processExtractedData/utils/occupation';\nimport { cleanEmptyNullData, cleanLocationString, cleanUrl } from 'utils/data';\nimport getCurrentPositions from 'utils/getCurrentPositions';\nimport hasResults from 'utils/hasResults';\nimport isValidString from 'utils/isValidString';\nimport uniqueBy from 'utils/collection';\n\n// TODO: move these to a config file\nconst STANDARD_CONTACT_PROFILE_URL_BASE = 'https://www.linkedin.com/in/';\nconst PREMIUM_CONTACT_PROFILE_URL_BASE = 'https://www.linkedin.com/sales/lead/';\nconst RECRUITER_CONTACT_PROFILE_URL_BASE =\n\t'https://www.linkedin.com/talent/search/profile/';\n\nfunction setCompanyNameAndTitle(profile) {\n\tconst _profile = profile;\n\n\tlet companyName;\n\tlet title;\n\tif (hasResults(_profile.positions)) {\n\t\tconst currentPositions = getCurrentPositions(_profile.positions);\n\t\tif (hasResults(currentPositions)) {\n\t\t\t_profile.companyName = currentPositions[0].companyName;\n\t\t\t_profile.title = currentPositions[0].titleName;\n\t\t}\n\t}\n\n\tif ((!_profile.companyName || !_profile.title) && _profile.occupation) {\n\t\t({ companyName, title } = parsePositionFromOccupationString(\n\t\t\t_profile.occupation\n\t\t));\n\t\tif (companyName) {\n\t\t\t_profile.companyName = companyName;\n\t\t}\n\n\t\tif (title) {\n\t\t\t_profile.title = title;\n\t\t}\n\t}\n\n\tif (hasResults(_profile.positions)) {\n\t\tconst currentPositions = getCurrentPositions(_profile.positions);\n\t\tif (\n\t\t\thasResults(currentPositions) &&\n\t\t\t(_profile.companyName !== currentPositions[0].companyName ||\n\t\t\t\t_profile.title !== currentPositions[0].titleName)\n\t\t) {\n\t\t\t_profile.companyName = currentPositions[0].companyName;\n\t\t\t_profile.title = currentPositions[0].titleName;\n\t\t}\n\t}\n\n\treturn _profile;\n}\n\n/**\n * Format the data from a parsed contact object into a Seamless.AI contact object\n * @param {Object} data - Object of parsed contact data\n * @return {Object} Seamless.AI expected contact object format\n */\nconst createSeamlessContact = (data) => {\n\tconst {\n\t\t// LinkedIn Identifiers\n\t\tliMemberId,\n\t\tpublicIdentifier,\n\t\tsalesNavIdentifier,\n\t\trecruiterIdentifier,\n\n\t\t// LinkedIn Profile URLs\n\t\tflagshipProfileUrl,\n\n\t\t// Entity info\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tbirthDateOn,\n\t\tprofilePicture,\n\t\tsummary,\n\n\t\t// Contact info\n\t\temails,\n\t\tphoneNumbers,\n\t\tprimaryEmail,\n\t\tlocation,\n\t\tsocial,\n\n\t\t// Personal info\n\t\tawards,\n\t\tcertifications,\n\t\tcourses,\n\t\teducations,\n\t\tindustries,\n\t\tlanguages,\n\t\torganizations,\n\t\tpatents,\n\t\tprojects,\n\t\tpublications,\n\t\tskills,\n\t\tvolunteeringExperiences,\n\n\t\t// JobInfo\n\t\toccupation,\n\t\tpositions,\n\t} = data;\n\n\tlet contactName = fullName;\n\tif (!contactName?.length && firstName && lastName) {\n\t\tcontactName = `${firstName} ${lastName}`;\n\t}\n\tconst liProfileUrl =\n\t\tflagshipProfileUrl ||\n\t\t(publicIdentifier &&\n\t\t\t`${STANDARD_CONTACT_PROFILE_URL_BASE}${publicIdentifier}`);\n\tconst liSalesNavUrl =\n\t\tsalesNavIdentifier &&\n\t\t`${PREMIUM_CONTACT_PROFILE_URL_BASE}${salesNavIdentifier}`;\n\tconst liRecruiterUrl =\n\t\trecruiterIdentifier &&\n\t\t`${RECRUITER_CONTACT_PROFILE_URL_BASE}${recruiterIdentifier}`;\n\n\tlet _positions = hasResults(positions)\n\t\t? positions.map(\n\t\t\t\t(position) =>\n\t\t\t\t\ttypeof position === 'object' &&\n\t\t\t\t\tObject.keys(position).length &&\n\t\t\t\t\tformatContactPosition(position)\n\t\t  )\n\t\t: null;\n\n\tif (hasResults(_positions)) {\n\t\t// remove empty\n\t\t_positions = _positions.filter(\n\t\t\t(pos) => !!pos?.companyName && !!pos?.titleName\n\t\t);\n\t\t_positions = uniqueBy(_positions, [\n\t\t\t'companyName',\n\t\t\t'titleName',\n\t\t\t'employmentType',\n\t\t]);\n\t}\n\n\tlet companyName;\n\tlet title;\n\n\tif (occupation) {\n\t\t({ companyName, title } =\n\t\t\tparsePositionFromOccupationString(occupation));\n\t}\n\n\tif (!companyName && positions?.length) {\n\t\tconst latestPosition = positions[0]; // the latest position may not always be the first one. if not, use startDate\n\t\tcompanyName = latestPosition.companyName;\n\t}\n\n\tlet person = {\n\t\t// LinkedIn Identifiers\n\t\tliMemberId,\n\t\tliPublicIdentifier: publicIdentifier && decodeURI(publicIdentifier),\n\t\tliSalesNavId: salesNavIdentifier,\n\t\tliRecruiterId: recruiterIdentifier,\n\n\t\t// LinkedIn Profile URLs\n\t\tliProfileUrl: isValidString(liProfileUrl)\n\t\t\t? cleanUrl(liProfileUrl)\n\t\t\t: null,\n\t\tliSalesNavUrl: isValidString(liSalesNavUrl)\n\t\t\t? cleanUrl(liSalesNavUrl)\n\t\t\t: null,\n\t\tliRecruiterUrl: isValidString(liRecruiterUrl)\n\t\t\t? cleanUrl(liRecruiterUrl)\n\t\t\t: null,\n\n\t\t// Entity Info\n\t\tfirstName,\n\t\tlastName,\n\t\tcontactName,\n\t\tbirthday: birthDateOn,\n\t\tliImageUrl: profilePicture && formatProfilePicture(profilePicture),\n\n\t\t// Contact info\n\t\tcontactEmail: formatEmailAddress(emails, primaryEmail),\n\t\tphoneNumbers,\n\t\tlocationFullString: isValidString(location)\n\t\t\t? cleanLocationString(location)\n\t\t\t: null,\n\t\tsocial,\n\n\t\t// Personal info\n\t\t...(summary && { meta: { summary } }),\n\t\tawards: hasResults(awards) ? awards : null,\n\t\tcertifications: hasResults(certifications) ? certifications : null,\n\t\tcourses: hasResults(courses) ? courses : null,\n\t\teducations: hasResults(educations)\n\t\t\t? formatContactEducations(educations)\n\t\t\t: null,\n\t\tindustries: formatContactIndustries(industries),\n\t\tlanguages: hasResults(languages)\n\t\t\t? formatContactLanguages(languages)\n\t\t\t: null,\n\t\torganizations: hasResults(organizations) ? organizations : null,\n\t\tpatents: hasResults(patents)\n\t\t\t? patents.filter((patent) => !!patent)\n\t\t\t: null,\n\t\tprojects: hasResults(projects)\n\t\t\t? projects.filter((project) => !!project)\n\t\t\t: null,\n\t\tpublications: hasResults(publications)\n\t\t\t? publications.filter((publication) => !!publication)\n\t\t\t: null,\n\t\tskills: hasResults(skills) ? formatContactSkills(skills) : null,\n\t\tvolunteeringExperiences: hasResults(volunteeringExperiences)\n\t\t\t? volunteeringExperiences\n\t\t\t: null,\n\n\t\t// Job info\n\t\tcompanyName,\n\t\ttitle,\n\t\t// company: {\n\t\t// \tname: companyName,\n\t\t// \ttitle,\n\t\t// },\n\t\toccupation,\n\t\tpositions: _positions,\n\t\titemType: 'contact',\n\t};\n\n\tperson = setCompanyNameAndTitle(person);\n\tperson = cleanEmptyNullData(person);\n\treturn person;\n};\n\nexport default createSeamlessContact;\n","// Vanilla JS equivalent to Lodash _uniqBy\nconst uniqueBy = (arr, keys) => {\n\tconst obj = arr.reduce((ac, a) => {\n\t\tconst keyString = keys.map((k) => a[k]).join('-');\n\t\tconst current = ac;\n\t\tcurrent[keyString] = a;\n\t\treturn current;\n\t}, {});\n\n\treturn Object.values(obj);\n};\n\nexport default uniqueBy;\n","const VALID_CONTACT_PRIMARY_PROPERTIES = ['firstName', 'contactName'];\nconst VALID_CONTACT_SECONDARY_PROPERTIES = [\n\t'liRecruiterId',\n\t'liSalesNavId',\n\t'liPublicIdentifier',\n];\n\nconst isValidContact = (contact) => {\n\treturn (\n\t\tVALID_CONTACT_PRIMARY_PROPERTIES.some((prop) =>\n\t\t\tObject.prototype.hasOwnProperty.call(contact, prop)\n\t\t) &&\n\t\tVALID_CONTACT_SECONDARY_PROPERTIES.some((prop) =>\n\t\t\tObject.prototype.hasOwnProperty.call(contact, prop)\n\t\t) &&\n\t\tVALID_CONTACT_PRIMARY_PROPERTIES.every(\n\t\t\t(prop) => !contact[prop]?.toLowerCase().includes('linkedin member')\n\t\t)\n\t);\n};\n\nexport default isValidContact;\n","import { expose } from 'comlink';\nimport parsePremiumContactAuthResult from 'workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactAuthResult';\nimport parsePremiumContactProfile from 'workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactProfile';\nimport parsePremiumContactRecommendations from 'workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactRecommendations';\nimport parsePremiumContactRecommendedLeads from 'workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactRecommendedLeads';\nimport parsePremiumContactSimilarLeads from 'workers/processExtractedData/processPremiumContactProfileData/parsePremiumContactSimilarLeads';\nimport hasResults from 'utils/hasResults';\n\nconst PREMIUM_CONTACT_FULL_PROFILE_AUTH_RESULT_DATA_MATCH_PATTERN =\n\t'profileId:';\nconst hasPremiumContactAuthResultProp = (data) => {\n\treturn (\n\t\tdata?.results &&\n\t\tObject.keys(data.results).some((prop) =>\n\t\t\tprop\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(\n\t\t\t\t\tPREMIUM_CONTACT_FULL_PROFILE_AUTH_RESULT_DATA_MATCH_PATTERN.toLowerCase()\n\t\t\t\t)\n\t\t)\n\t);\n};\n\nfunction hasPremiumContactProfileData(data) {\n\treturn Boolean(\n\t\t((data.firstName &&\n\t\t\t!data.firstName.toLowerCase().includes('linkedin member')) ||\n\t\t\t(data.fullName &&\n\t\t\t\t!data.fullName.toLowerCase().includes('linkedin member'))) &&\n\t\t\t!Object.prototype.hasOwnProperty.call(\n\t\t\t\tdata,\n\t\t\t\t'similarProfilesResolutionResults'\n\t\t\t)\n\t);\n}\n\nconst OTHER_LEADS_BASE_MATCHER_PROP = 'highlight';\nfunction hasOtherLeadsData(matchData) {\n\treturn Boolean(\n\t\tmatchData.elements?.length &&\n\t\t\tmatchData.elements.some((item) => {\n\t\t\t\treturn Object.prototype.hasOwnProperty.call(\n\t\t\t\t\titem,\n\t\t\t\t\tOTHER_LEADS_BASE_MATCHER_PROP\n\t\t\t\t);\n\t\t\t})\n\t);\n}\n\nconst RECOMMENDED_LEADS_SUB_PROP = 'sharedConnection';\nfunction isRecommendedLeadsData(data) {\n\treturn data.elements?.some((obj) => {\n\t\tconst flattenedMatchObj =\n\t\t\tobj?.[OTHER_LEADS_BASE_MATCHER_PROP] ?? undefined;\n\t\treturn (\n\t\t\tflattenedMatchObj &&\n\t\t\tObject.prototype.hasOwnProperty.call(\n\t\t\t\tflattenedMatchObj,\n\t\t\t\tRECOMMENDED_LEADS_SUB_PROP\n\t\t\t)\n\t\t);\n\t});\n}\n\nconst hasRecommendationsData = (data) =>\n\tObject.prototype.hasOwnProperty.call(data, 'given') ||\n\tObject.prototype.hasOwnProperty.call(data, 'received');\n\nconst processPremiumContactProfileData = async (pageData) => {\n\tlet profileUrlOverride;\n\tlet parsedItems = [];\n\n\tif (hasPremiumContactAuthResultProp(pageData)) {\n\t\tconst premiumContactAuthResultData = parsePremiumContactAuthResult(\n\t\t\tpageData.results\n\t\t);\n\t\tif (premiumContactAuthResultData) {\n\t\t\tprofileUrlOverride =\n\t\t\t\tpremiumContactAuthResultData?.liSalesNavUrl || null;\n\t\t\tparsedItems = [premiumContactAuthResultData];\n\t\t}\n\t} else if (hasPremiumContactProfileData(pageData)) {\n\t\tconst premiumContactProfileData = parsePremiumContactProfile(pageData);\n\t\tif (premiumContactProfileData) {\n\t\t\tprofileUrlOverride =\n\t\t\t\tpremiumContactProfileData?.liSalesNavUrl || null;\n\t\t\tparsedItems = [premiumContactProfileData];\n\t\t}\n\t} else if (hasRecommendationsData(pageData)) {\n\t\tconst contactItems = [];\n\t\t['given', 'received'].forEach((type) => {\n\t\t\tif (\n\t\t\t\tpageData[type] &&\n\t\t\t\tArray.isArray(pageData[type]) &&\n\t\t\t\tpageData[type].length\n\t\t\t) {\n\t\t\t\tconst people = pageData[type].map((item) =>\n\t\t\t\t\ttype === 'given'\n\t\t\t\t\t\t? item.recommendeeResolutionResult\n\t\t\t\t\t\t: item.recommenderResolutionResult\n\t\t\t\t);\n\n\t\t\t\tif (people?.length) {\n\t\t\t\t\tcontactItems.push(...people);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst contactParsers = contactItems.map((item) =>\n\t\t\tparsePremiumContactRecommendations(item)\n\t\t);\n\t\tif (contactParsers?.length) {\n\t\t\tparsedItems = await Promise.all(contactParsers);\n\t\t}\n\t} else if (hasOtherLeadsData(pageData)) {\n\t\tlet contactParsers = [];\n\n\t\tif (isRecommendedLeadsData(pageData)) {\n\t\t\tcontactParsers = pageData.elements.map((item) =>\n\t\t\t\tparsePremiumContactRecommendedLeads(item)\n\t\t\t);\n\t\t} else {\n\t\t\tcontactParsers = pageData.elements.map((item) =>\n\t\t\t\tparsePremiumContactSimilarLeads(item)\n\t\t\t);\n\t\t}\n\n\t\tif (hasResults(contactParsers)) {\n\t\t\tparsedItems = await Promise.all(contactParsers);\n\t\t}\n\t}\n\n\treturn {\n\t\tprofileUrlOverride,\n\t\tparsedItems,\n\t};\n};\n\nexpose(processPremiumContactProfileData, self);\n","import { getSalesNavIdFromUrn } from 'workers/processExtractedData/utils/identifiers';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport isValidContact from 'utils/isValidContact';\n\nconst PREMIUM_CONTACT_FULL_PROFILE_AUTH_RESULT_DATA_MATCH_PATTERN =\n\t'profileId:';\n\nconst parsePremiumContactAuthResult = (item) => {\n\tconst nestedResultProperty = Object.keys(item).find((key) =>\n\t\tkey\n\t\t\t.toLowerCase()\n\t\t\t.includes(\n\t\t\t\tPREMIUM_CONTACT_FULL_PROFILE_AUTH_RESULT_DATA_MATCH_PATTERN.toLowerCase()\n\t\t\t)\n\t);\n\n\tlet salesNavIdentifier;\n\tif (item?.[nestedResultProperty]?.entityUrn) {\n\t\tsalesNavIdentifier = getSalesNavIdFromUrn(\n\t\t\titem[nestedResultProperty].entityUrn\n\t\t);\n\t}\n\n\tif (salesNavIdentifier) {\n\t\tconst {\n\t\t\tawards,\n\t\t\tcertifications,\n\t\t\tcourses,\n\t\t\teducations,\n\t\t\tlanguages,\n\t\t\torganizations,\n\t\t\tpatents,\n\t\t\tpositions,\n\t\t\tprojects,\n\t\t\tpublications,\n\t\t\tskills,\n\t\t\tvolunteeringExperiences,\n\t\t} = item[nestedResultProperty];\n\n\t\tconst contactOpts = {\n\t\t\tawards,\n\t\t\tcertifications,\n\t\t\tcourses,\n\t\t\teducations,\n\t\t\tlanguages,\n\t\t\torganizations,\n\t\t\tpatents,\n\t\t\tprojects,\n\t\t\tpublications,\n\t\t\tskills,\n\t\t\tvolunteeringExperiences,\n\t\t\tpositions,\n\t\t};\n\n\t\tconst parsedContact = createSeamlessContact(contactOpts);\n\t\tparsedContact.pageSectionSourced = 'premiumContactProfile';\n\t\tparsedContact.itemType = 'contact';\n\t\treturn isValidContact(parsedContact) ? parsedContact : null;\n\t}\n};\n\nexport default parsePremiumContactAuthResult;\n","import { formatContactSocial } from 'workers/processExtractedData/utils/contactInfo';\nimport {\n\tgetMemberIdFromUrn,\n\tgetIdFromProfileUrl,\n\tgetSalesNavIdFromUrn,\n} from 'workers/processExtractedData/utils/identifiers';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport isValidContact from 'utils/isValidContact';\n\nconst parsePremiumContactProfile = (data) => {\n\tconst {\n\t\tcontactInfo: {\n\t\t\taddresses,\n\t\t\temails,\n\t\t\tphoneNumbers,\n\t\t\tprimaryEmail,\n\t\t\tsocialHandles,\n\t\t\twebsites,\n\t\t} = {},\n\t\tentityUrn,\n\t\teducations,\n\t\tflagshipProfileUrl,\n\t\tfirstName,\n\t\tfullName,\n\t\tindustry,\n\t\tlastName,\n\t\tlocation,\n\t\tobjectUrn,\n\t\tpositions,\n\t\tprofilePictureDisplayImage,\n\t\tsummary,\n\t} = data;\n\n\tconst contactOpts = {\n\t\tliMemberId: objectUrn && getMemberIdFromUrn(objectUrn),\n\t\t// the flagshipProfileUrl is their basic linkedin profile url so need to use standardContactProfile regex\n\t\tpublicIdentifier:\n\t\t\tflagshipProfileUrl &&\n\t\t\tgetIdFromProfileUrl(flagshipProfileUrl, 'standardContactProfile'),\n\t\tsalesNavIdentifier: entityUrn && getSalesNavIdFromUrn(entityUrn),\n\t\tflagshipProfileUrl,\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tprofilePicture: profilePictureDisplayImage,\n\t\temails,\n\t\tlocation:\n\t\t\taddresses && Array.isArray(addresses) && addresses?.[0].fullAddress\n\t\t\t\t? addresses[0].fullAddress\n\t\t\t\t: location,\n\t\tphoneNumbers,\n\t\tprimaryEmail,\n\t\tsocial: formatContactSocial({ websites, socialHandles }),\n\t\tsummary,\n\t\teducations,\n\t\tindustries: industry ? [industry] : null,\n\t\tpositions,\n\t};\n\n\tconst parsedContact = createSeamlessContact(contactOpts);\n\tparsedContact.pageSectionSourced = 'premiumContactProfile';\n\tparsedContact.itemType = 'contact';\n\treturn isValidContact(parsedContact) ? parsedContact : null;\n};\n\nexport default parsePremiumContactProfile;\n","import { getSalesNavIdFromUrn } from 'workers/processExtractedData/utils/identifiers';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport isValidContact from 'utils/isValidContact';\n\nconst parsePremiumContactRecommendations = (item) => {\n\tconst {\n\t\tentityUrn,\n\t\tfirstName,\n\t\tfullName,\n\t\theadline,\n\t\tlastName,\n\t\tprofilePictureDisplayImage,\n\t} = item;\n\n\tconst contactOpts = {\n\t\tsalesNavIdentifier: entityUrn && getSalesNavIdFromUrn(entityUrn),\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tprofilePicture: profilePictureDisplayImage,\n\t\toccupation: headline,\n\t};\n\n\tconst parsedContact = createSeamlessContact(contactOpts);\n\tparsedContact.pageSectionSourced = 'premiumContactRecommendations';\n\tparsedContact.itemType = 'contact';\n\treturn isValidContact(parsedContact) ? parsedContact : null;\n};\n\nexport default parsePremiumContactRecommendations;\n","import {\n\tgetMemberIdFromUrn,\n\tgetSalesNavIdFromUrn,\n} from 'workers/processExtractedData/utils/identifiers';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport isValidContact from 'utils/isValidContact';\n\nconst parsePremiumContactRecommendedLeads = (item) => {\n\tconst _item = item?.profileUrnResolutionResult || {};\n\n\tconst {\n\t\tentityUrn,\n\t\tfirstName,\n\t\tfullName,\n\t\tlastName,\n\t\tlocation,\n\t\tobjectUrn,\n\t\tpositions,\n\t\tprofilePictureDisplayImage,\n\t} = _item;\n\n\tconst contactOpts = {\n\t\tliMemberId: objectUrn && getMemberIdFromUrn(objectUrn),\n\t\tsalesNavIdentifier: entityUrn && getSalesNavIdFromUrn(entityUrn),\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tprofilePicture: profilePictureDisplayImage,\n\t\tlocation,\n\t\tpositions: positions?.length ? positions : null,\n\t};\n\n\tconst parsedContact = createSeamlessContact(contactOpts);\n\tparsedContact.pageSectionSourced = 'premiumContactRecommendedLeads';\n\tparsedContact.itemType = 'contact';\n\treturn isValidContact(parsedContact) ? parsedContact : null;\n};\n\nexport default parsePremiumContactRecommendedLeads;\n","import {\n\tgetMemberIdFromUrn,\n\tgetSalesNavIdFromUrn,\n} from 'workers/processExtractedData/utils/identifiers';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport isValidContact from 'utils/isValidContact';\n\nconst parsePremiumContactSimilarLeads = (item) => {\n\tconst _item = item?.profileUrnResolutionResult || {};\n\n\tconst {\n\t\tentityUrn,\n\t\tfirstName,\n\t\tfullName,\n\t\tindustry,\n\t\tlastName,\n\t\tlocation,\n\t\tobjectUrn,\n\t\tpositions,\n\t\tprofilePictureDisplayImage,\n\t} = _item;\n\n\tconst contactOpts = {\n\t\tliMemberId: objectUrn && getMemberIdFromUrn(objectUrn),\n\t\tsalesNavIdentifier: entityUrn && getSalesNavIdFromUrn(entityUrn),\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tprofilePicture: profilePictureDisplayImage,\n\t\tlocation,\n\t\tindustries: industry ? [industry] : null,\n\t\tpositions: positions?.length ? positions : null,\n\t};\n\n\tconst parsedContact = createSeamlessContact(contactOpts);\n\tparsedContact.pageSectionSourced = 'premiumContactSimilarLeads';\n\tparsedContact.itemType = 'contact';\n\treturn isValidContact(parsedContact) ? parsedContact : null;\n};\n\nexport default parsePremiumContactSimilarLeads;\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP","PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP","STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP","PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP","RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP","GET_MEMBER_ID_FROM_URN_REG_EXP","SALES_NAV_ID_FROM_URN_REG_EXP","profileUrlIdModuleRegexMap","premiumCompanySearch","premiumCompanyProfile","premiumSavedAccounts","premiumCompanyRecommendedLeads","premiumCompanyAccountMapEntries","premiumCompanyPeopleAlsoViewed","premiumSavedLeads","premiumContactSavedSearch","premiumContactSearch","premiumContactProfile","premiumContactRecommendations","premiumContactRecommendedLeads","premiumContactSimilarLeads","standardCompanySearch","standardCompanyProfile","standardCompanyPeopleYouMayKnow","standardBlendedSearchCompany","standardContactProfile","standardContactPeopleYouMayKnow","standardContactPeopleAlsoViewed","standardContactRecommendationsReceived","standardContactRecommendationsGiven","standardContactSearch","standardBlendedSearchContact","recruiterContactProfile","recruiterContactRecommendations","recruiterContactSimilarProfiles","recruiterContactSearch","recruiterSavedContactSearch","getIdFromProfileUrl","profileUrl","module","matchRegExp","profileId","match","groups","publicIdentifier","decodeURI","getMemberIdFromUrn","urn","memberId","getSalesNavIdFromUrn","salesNavId","formatEmailAddress","emails","primaryEmail","emailAddress","isArray","err","formatContactSocial","websites","socialHandles","twitterHandles","social","contactWebsites","w","category","url","filter","forEach","website","push","contactSocialHandles","t","toLowerCase","socialType","contactTwitterHandles","includes","s","cleanEmptyNullData","cleanedData","entries","k","keys","splice","cleanLocationString","locationString","replace","cleanUrl","newUrl","trim","test","profilePicture","picture","artifacts","rootUrl","fileIdentifyingUrlPathSegment","industries","formattedIndustries","values","ind","industry","formatContactEducations","educations","education","schoolName","degree","degreeName","activities","fieldOfStudy","dateRange","year","dateRangeStartYear","end","dateRangeEndYear","startedOn","startedOnYear","endedOn","endedOnYear","endDateOn","endDateOnYear","startDateOn","startDateOnYear","startDateYear","endDateYear","startYear","endYear","fieldsOfStudy","educationFieldOfStudy","companyName","ensureArray","startDate","endDate","formatContactSkills","skills","skillsArr","skill","_skills","formatContactLanguages","languages","languagesArr","language","_languages","parsePositionFromOccupationString","occupation","occupationParts","indexOf","split","title","pop","getCurrentPositions","positions","current","isObject","possibleString","Boolean","liMemberId","salesNavIdentifier","recruiterIdentifier","flagshipProfileUrl","firstName","lastName","fullName","birthDateOn","summary","phoneNumbers","location","awards","certifications","courses","organizations","patents","projects","publications","volunteeringExperiences","contactName","liProfileUrl","liSalesNavUrl","liRecruiterUrl","_positions","hasResults","position","company","companyUrn","companyUrnResolutionResult","companyResolutionResult","description","employmentType","locationName","companyUrnLocation","_industries","_dateRangeStart","_dateRangeStartDate","_dateRangeEndDate","_dateRangeEnd","_companyUrn","_location","displayName","month","fullString","linkedInCompanyId","titleName","formatContactPosition","pos","ac","a","uniqueBy","person","liPublicIdentifier","liSalesNavId","liRecruiterId","isValidString","birthday","liImageUrl","formatProfilePicture","contactEmail","locationFullString","meta","formatContactIndustries","patent","project","publication","itemType","profile","_profile","currentPositions","setCompanyNameAndTitle","VALID_CONTACT_PRIMARY_PROPERTIES","VALID_CONTACT_SECONDARY_PROPERTIES","contact","some","hasOwnProperty","call","every","async","profileUrlOverride","parsedItems","pageData","results","premiumContactAuthResultData","item","nestedResultProperty","find","key","entityUrn","parsedContact","createSeamlessContact","pageSectionSourced","isValidContact","parsePremiumContactAuthResult","hasPremiumContactProfileData","premiumContactProfileData","contactInfo","addresses","objectUrn","profilePictureDisplayImage","contactOpts","fullAddress","parsePremiumContactProfile","hasRecommendationsData","contactItems","people","recommendeeResolutionResult","recommenderResolutionResult","contactParsers","headline","parsePremiumContactRecommendations","all","matchData","elements","flattenedMatchObj","isRecommendedLeadsData","_item","profileUrnResolutionResult","parsePremiumContactRecommendedLeads","parsePremiumContactSimilarLeads"],"sourceRoot":""}