{"version":3,"file":"js/processStandardContactFallbackData.worker.100f7eb6d8db114cfe59.js","mappings":"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","sources":["webpack://@seamless/chrome-extension/../../node_modules/comlink/dist/esm/comlink.mjs","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/contactInfo.js","webpack://@seamless/chrome-extension/./src/utils/data.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/formatProfilePicture.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/industries.js","webpack://@seamless/chrome-extension/../../modules/core/src/utils/ensureArray.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/experience.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/identifiers.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/occupation.js","webpack://@seamless/chrome-extension/./src/utils/getCurrentPositions.js","webpack://@seamless/chrome-extension/./src/utils/coreDupes/isObject.js","webpack://@seamless/chrome-extension/./src/utils/hasResults.js","webpack://@seamless/chrome-extension/./src/utils/coreDupes/isEmpty.js","webpack://@seamless/chrome-extension/./src/utils/isValidString.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/utils/createSeamlessContact.js","webpack://@seamless/chrome-extension/./src/utils/collection.js","webpack://@seamless/chrome-extension/./src/workers/processExtractedData/processStandardContactFallbackData/processStandardContactFallbackData.worker.js"],"sourcesContent":["/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n","import isEmpty from 'utils/coreDupes/isEmpty';\nimport isObject from 'utils/coreDupes/isObject';\n\n/**\n * Email Address\n */\n\n/**\n * Takes a number of email address response types from a LinkedIn response and returns just the email address\n * @param {Array.<Object>} emails - Several different objects with a nested email address\n * @param {string} primaryEmail - When sometimes an email address is passed down without other LinkedIn display data\n * @returns {string} The deduced email address\n */\nexport function formatEmailAddress(emails, primaryEmail) {\n\ttry {\n\t\tlet emailAddress;\n\n\t\tif (primaryEmail?.length) {\n\t\t\temailAddress = primaryEmail;\n\t\t} else if (emails && typeof emails === 'string' && emails.length) {\n\t\t\temailAddress = emails;\n\t\t} else if (emails?.emailAddress) {\n\t\t\temailAddress = emails.emailAddress;\n\t\t} else if (Array.isArray(emails) && emails.length) {\n\t\t\temailAddress = emails[0].emailAddress;\n\t\t}\n\n\t\treturn emailAddress;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n * Location\n */\n\nexport const cleanLocationString = (locationString) => {\n\treturn (\n\t\tlocationString\n\t\t\t// Replace line breaks\n\t\t\t.replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n\t\t\t.replace(/^Greater /, '')\n\t\t\t.replace(/ Area$/, '')\n\t\t\t.replace(/ Metropolitan$/, '')\n\t);\n};\n\nconst LOCATION_OBJECT_KEYS = [\n\t'line1',\n\t'line2',\n\t'city',\n\t'geographicArea',\n\t'postalCode',\n\t'country',\n];\nfunction hasValidLocationKeys(location) {\n\treturn (\n\t\tisObject(location) &&\n\t\t!isEmpty(location) &&\n\t\tObject.keys(location).some((k) => LOCATION_OBJECT_KEYS.includes(k))\n\t);\n}\n\nexport function formatCompanyLocationObject(location) {\n\ttry {\n\t\tlet street1;\n\t\tlet street2;\n\t\tlet city;\n\t\tlet state;\n\t\tlet postCode;\n\t\tlet country;\n\n\t\tif (location && hasValidLocationKeys(location)) {\n\t\t\t({\n\t\t\t\tline1: street1,\n\t\t\t\tline2: street2,\n\t\t\t\tcity,\n\t\t\t\tgeographicArea: state,\n\t\t\t\tpostalCode: postCode,\n\t\t\t\tcountry,\n\t\t\t} = location);\n\t\t}\n\n\t\treturn {\n\t\t\tstreet1,\n\t\t\tstreet2,\n\t\t\tcity,\n\t\t\tstate,\n\t\t\tpostCode,\n\t\t\tcountry,\n\t\t};\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function getCompanyLocationStringFromObject(locationObject) {\n\ttry {\n\t\tlet fullString;\n\t\tif (!isEmpty(locationObject)) {\n\t\t\tconst {\n\t\t\t\tstreet1,\n\t\t\t\tstreet2 = '',\n\t\t\t\tcity,\n\t\t\t\tstate,\n\t\t\t\tpostCode,\n\t\t\t\tcountry,\n\t\t\t} = locationObject;\n\t\t\tfullString = [street1, street2, city, state, postCode, country]\n\t\t\t\t.map((s) => s && s.trim())\n\t\t\t\t.filter((s) => !!s)\n\t\t\t\t.join(' ');\n\t\t}\n\n\t\tif (typeof fullString === 'string' && !fullString.length) {\n\t\t\tfullString = undefined;\n\t\t}\n\n\t\treturn fullString;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\n/**\n * Social\n */\n\nexport function formatContactSocial({\n\twebsites = [],\n\tsocialHandles = [],\n\ttwitterHandles = [],\n}) {\n\ttry {\n\t\tlet social = [];\n\n\t\tif (websites?.length) {\n\t\t\tconst contactWebsites = websites\n\t\t\t\t.map(\n\t\t\t\t\t(w) =>\n\t\t\t\t\t\tw && {\n\t\t\t\t\t\t\ttype: w.type?.category\n\t\t\t\t\t\t\t\t? w.type.category\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\turl: w.url,\n\t\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t\t.filter((w) => !!w);\n\t\t\tif (contactWebsites?.length) {\n\t\t\t\tcontactWebsites.forEach((website) => social.push(website));\n\t\t\t}\n\t\t}\n\n\t\tif (socialHandles?.length) {\n\t\t\tconst contactSocialHandles = socialHandles.map(\n\t\t\t\t(t) =>\n\t\t\t\t\tt?.type?.length &&\n\t\t\t\t\tt.type.toLowerCase() === 'twitter' && {\n\t\t\t\t\t\ttype: 'social',\n\t\t\t\t\t\tsocialType: 'twitter',\n\t\t\t\t\t\turl: `http://twitter.com/${t.name}`,\n\t\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (contactSocialHandles?.length) {\n\t\t\t\tsocial.push(contactSocialHandles);\n\t\t\t}\n\t\t}\n\n\t\tif (twitterHandles?.length) {\n\t\t\tconst contactTwitterHandles = twitterHandles.map(\n\t\t\t\t(t) =>\n\t\t\t\t\tt?.name && {\n\t\t\t\t\t\ttype: 'social',\n\t\t\t\t\t\tsocialType: 'twitter',\n\t\t\t\t\t\turl: t.name.includes('http')\n\t\t\t\t\t\t\t? t.name\n\t\t\t\t\t\t\t: `http://twitter.com/${t.name}`,\n\t\t\t\t\t}\n\t\t\t);\n\t\t\tif (contactTwitterHandles?.length) {\n\t\t\t\tsocial.push(contactTwitterHandles);\n\t\t\t}\n\t\t}\n\n\t\t// if (picture && picture.length) {\n\t\t// \tsocial.push({\n\t\t// \t\ttype: 'image',\n\t\t// \t\turl: picture,\n\t\t// \t\tsocialType: 'LinkedIn',\n\t\t// \t});\n\t\t// }\n\n\t\tif (social?.length) {\n\t\t\tsocial = social.filter((s) => s && s.url);\n\t\t}\n\n\t\treturn social;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n","const cleanEmptyNullData = (data) => {\n\tif (!data) {\n\t\treturn {};\n\t}\n\n\tconst cleanedData = data;\n\tObject.entries(cleanedData).forEach(([k, v]) => {\n\t\tif (v && typeof v === 'object') {\n\t\t\tcleanEmptyNullData(v);\n\t\t}\n\n\t\tif (\n\t\t\t(v && typeof v === 'object' && !Object.keys(v).length) ||\n\t\t\tv === null ||\n\t\t\tv === undefined\n\t\t) {\n\t\t\tif (Array.isArray(cleanedData)) {\n\t\t\t\tcleanedData.splice(k, 1);\n\t\t\t} else {\n\t\t\t\tdelete cleanedData[k];\n\t\t\t}\n\t\t}\n\t});\n\n\treturn cleanedData;\n};\n\nconst cleanLocationString = (locationString) => {\n\treturn (\n\t\tlocationString\n\t\t\t// Replace line breaks\n\t\t\t.replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n\t\t\t.replace(/^Greater /, '')\n\t\t\t.replace(/ Area$/, '')\n\t\t\t.replace(/ Metropolitan$/, '')\n\t);\n};\n\nconst cleanUrl = (url) => {\n\tlet newUrl = url && typeof url === 'string' && url.trim();\n\tif (!newUrl) {\n\t\t// return original data\n\t\treturn url;\n\t}\n\n\tif (/^https?:\\/([^/].*|\\/\\/+.+)$/i.test(newUrl)) {\n\t\tnewUrl = newUrl.replace(/:\\/+/, '://');\n\t}\n\n\treturn newUrl;\n};\n\nexport { cleanEmptyNullData, cleanLocationString, cleanUrl };\n","import { cleanUrl } from 'utils/data';\n\nconst formatProfilePicture = (profilePicture) => {\n\ttry {\n\t\tlet picture = profilePicture;\n\n\t\tif (picture && typeof picture === 'object') {\n\t\t\tconst { artifacts, rootUrl } = picture;\n\t\t\tif (\n\t\t\t\trootUrl?.length &&\n\t\t\t\trootUrl.includes('http') &&\n\t\t\t\tartifacts &&\n\t\t\t\tArray.isArray(artifacts)\n\t\t\t) {\n\t\t\t\tpicture =\n\t\t\t\t\trootUrl +\n\t\t\t\t\tartifacts[artifacts.length - 1]\n\t\t\t\t\t\t.fileIdentifyingUrlPathSegment;\n\t\t\t} else if (\n\t\t\t\t(!rootUrl || !rootUrl.length) &&\n\t\t\t\tartifacts?.length &&\n\t\t\t\tartifacts[artifacts.length - 1].fileIdentifyingUrlPathSegment &&\n\t\t\t\tartifacts[\n\t\t\t\t\tartifacts.length - 1\n\t\t\t\t].fileIdentifyingUrlPathSegment.includes('http')\n\t\t\t) {\n\t\t\t\tpicture =\n\t\t\t\t\tartifacts[artifacts.length - 1]\n\t\t\t\t\t\t.fileIdentifyingUrlPathSegment;\n\t\t\t}\n\n\t\t\tif (!picture || !picture.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\n\t\tpicture = picture && cleanUrl(picture);\n\t\treturn picture;\n\t} catch (err) {\n\t\treturn undefined;\n\t}\n};\n\nexport default formatProfilePicture;\n","const formatContactIndustries = (industries = []) => {\n\ttry {\n\t\tlet formattedIndustries = industries;\n\t\tif (\n\t\t\tformattedIndustries &&\n\t\t\ttypeof formattedIndustries === 'object' &&\n\t\t\t!Array.isArray(formattedIndustries)\n\t\t) {\n\t\t\tformattedIndustries = Object.values(formattedIndustries);\n\t\t}\n\n\t\tformattedIndustries = formattedIndustries.reduce((arr, ind) => {\n\t\t\tconst industry = (\n\t\t\t\t(typeof ind === 'string' && ind) ||\n\t\t\t\tind.name ||\n\t\t\t\t''\n\t\t\t).trim();\n\t\t\tif (industry) {\n\t\t\t\tarr.push(industry);\n\t\t\t}\n\t\t\treturn arr;\n\t\t}, []);\n\t\treturn formattedIndustries.length ? formattedIndustries : null;\n\t} catch (err) {\n\t\treturn null;\n\t}\n};\n\nexport default formatContactIndustries;\n","function ensureArray(val) {\n\tif (Array.isArray(val)) {\n\t\treturn val;\n\t}\n\n\tif (val == null) {\n\t\treturn [];\n\t}\n\n\treturn [val];\n}\n\nexport default ensureArray;\n","import ensureArray from '@seamless/core/src/utils/ensureArray';\n\nexport function formatContactEducations(educations) {\n\ttry {\n\t\treturn educations\n\t\t\t.filter((education) => education)\n\t\t\t.map((education) => {\n\t\t\t\tconst {\n\t\t\t\t\tschoolName: name,\n\t\t\t\t\tdegree,\n\t\t\t\t\tdegreeName,\n\t\t\t\t\tactivities = [],\n\t\t\t\t\tfieldOfStudy,\n\t\t\t\t\tdateRange: {\n\t\t\t\t\t\tstart: { year: dateRangeStartYear } = {},\n\t\t\t\t\t\tend: { year: dateRangeEndYear } = {},\n\t\t\t\t\t} = {},\n\t\t\t\t\tstartedOn: { year: startedOnYear } = {},\n\t\t\t\t\tendedOn: { year: endedOnYear } = {},\n\t\t\t\t\tendDateOn: { year: endDateOnYear } = {},\n\t\t\t\t\tstartDateOn: { year: startDateOnYear } = {},\n\n\t\t\t\t\t// Legacy Recruiter\n\t\t\t\t\tstartDateYear,\n\t\t\t\t\tendDateYear,\n\t\t\t\t} = education;\n\n\t\t\t\tconst startYear =\n\t\t\t\t\tdateRangeStartYear ||\n\t\t\t\t\tstartedOnYear ||\n\t\t\t\t\tstartDateOnYear ||\n\t\t\t\t\tstartDateYear;\n\t\t\t\tconst endYear =\n\t\t\t\t\tdateRangeEndYear ||\n\t\t\t\t\tendedOnYear ||\n\t\t\t\t\tendDateOnYear ||\n\t\t\t\t\tendDateYear;\n\n\t\t\t\tlet { fieldsOfStudy } = education;\n\t\t\t\tif (Array.isArray(fieldsOfStudy) && fieldsOfStudy.length) {\n\t\t\t\t\tfieldsOfStudy = fieldsOfStudy.join();\n\t\t\t\t}\n\n\t\t\t\tconst educationFieldOfStudy =\n\t\t\t\t\ttypeof fieldsOfStudy === 'string'\n\t\t\t\t\t\t? fieldsOfStudy\n\t\t\t\t\t\t: fieldOfStudy;\n\n\t\t\t\tconst formattedEducation = {\n\t\t\t\t\tcompanyName: name,\n\t\t\t\t\tdegreeName: degreeName || degree,\n\t\t\t\t\tactivities: activities && ensureArray(activities),\n\t\t\t\t\tfieldOfStudy: educationFieldOfStudy,\n\t\t\t\t\t...(startYear && { startDate: { year: startYear } }),\n\t\t\t\t\t...(endYear && { endDate: { year: endYear } }),\n\t\t\t\t};\n\n\t\t\t\treturn formattedEducation;\n\t\t\t});\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function formatContactSkills(skills = []) {\n\ttry {\n\t\tconst contactSkills = skills.reduce((skillsArr, skill) => {\n\t\t\tconst _skills = skillsArr;\n\t\t\tif (skill.name) {\n\t\t\t\t_skills.push(skill.name);\n\t\t\t}\n\t\t\treturn _skills;\n\t\t}, []);\n\t\treturn contactSkills;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n\nexport function formatContactLanguages(languages = []) {\n\ttry {\n\t\tconst contactLanguages = languages.reduce((languagesArr, language) => {\n\t\t\tconst _languages = languagesArr;\n\t\t\tif (language.name) {\n\t\t\t\t_languages.push(language.name);\n\t\t\t}\n\t\t\treturn _languages;\n\t\t}, []);\n\t\treturn contactLanguages;\n\t} catch (err) {\n\t\treturn null;\n\t}\n}\n","// ie., https://www.linkedin.com/in/annieheckenberger/\nconst STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/in\\/(?<publicIdentifier>[\\w_À&&-ÿ%-][^/?]+)\\/?/i;\n\n// Examples:\n// https://www.linkedin.com/sales/company/130757/insights?_ntb=fAcMJ6%2FtREiNqQyKnKT4Xg%3D%3D\n// https://www.linkedin.com/sales/people/ACwAAAAmVFgBoPQGSO_l_3cwHlpNdOiHdaW2pAQ,NAME_SEARCH,L7q4?_ntb=%C2%A6%15O%09%C3%92%C2%AAA%C2%B0%C2%AF%C3%90%20C%C3%BFk%1D%C2%9A\n// https://www.linkedin.com/sales/lead/ACwAAAAmVFgBoPQGSO_l_3cwHlpNdOiHdaW2pAQ,NAME_SEARCH,L7q4?_ntb=%C2%A6%15O%09%C3%92%C2%AAA%C2%B0%C2%AF%C3%90%20C%C3%BFk%1D%C2%9A\nconst PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/sales\\/(people|lead)\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^,?/]+)?/i;\n\n// ie., https://www.linkedin.com/company/saatchi-&-saatchi-wellness/\nconst STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/company\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^/?]+)\\/?/i;\n\n// ie., /sales/company/610608?_ntb=fAcMJ6%2FtREiNqQyKnKT4Xg%3D%3D\nconst PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:https?:)?(?:\\/\\/)?(?:[\\w]+\\.)?(?:linkedin\\.com)?\\/sales\\/company\\/(?<publicIdentifier>[\\d][^/?]+)\\/?/i;\n\n// Examples:\n// https://www.linkedin.com/talent/profile/AEMAAAB_kGABaRsOMBn6bfW1iw_90slztzfmdys?project=400938220&lipi=urn%3Ali%3Apage%3Ad_talent_projectsHome%3B%2BMSr4USfTHyZnlrgcgRpVw%3D%3D\n// /talent/profile/AEMAAAB_kGABaRsOMBn6bfW1iw_90slztzfmdys?project=400938220&lipi=urn%3Ali%3Apage%3Ad_talent_projectsHome%3B%2BMSr4USfTHyZnlrgcgRpVw%3D%3D\n// https://www.linkedin.com/talent/hire/400938220/manage/all/profile/AEMAAAEzgEcBNTs49BJySGuQVAAZ2K9CECIwpT0?project=400938220\nconst RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP =\n\t/(?:\\/profile)\\/(?<publicIdentifier>[\\w_À&-ÿ%-][^?/]+)\\/?/i;\n\n// urn:li:fs_salesCompany:76390\n// urn:li:member:159784268286\n// urn:li:fsd_entityResultViewModel:(urn:li:fsd_company:3776,SEARCH_SRP)\nconst GET_MEMBER_ID_FROM_URN_REG_EXP =\n\t/(?:\\w+:(\\(?))+(?::[\\w_]+(?:member|company):)?(?<memberId>[\\d]+)?/i;\n\n// Examples:\n// urn:li:fs_salesProfile:(ACwAAABXB8YBL-pY0m1uk-T5PnxhaGO1zKqmc8U,NAME_SEARCH,ecVP)\n// urn:li:fsd_entityResultViewModel:urn:li:fsd_profile:ACoAAA2xYEwBskLoVyr5rCQ4PWpslakEhwAtgXc // New Community search result entityUrn\n// urn:li:fsd_profileCard:(ACoAAAAD8nEBVA4J_Y8kdohsFvb49-Gritg17kQ,EXPERIENCE,en_US)\nconst SALES_NAV_ID_FROM_URN_REG_EXP =\n\t/(?:\\w+:)+fs(?:d)?_(?:sales|mini|profile)?(Profile|Card):(?:\\()?(?<salesNavId>[\\w_À&-ÿ%-][^,]+)?,?(?<type>.[^,]+)?/i;\n\n// ie., urn:li:ts_profile:AEMAAABRsqUB-vVYVqCYoLwKjsFNBZFF_I4IYdw\nconst RECRUITER_CONTACT_FROM_URN_REG_EXP =\n\t/(?:\\w+:)+(ts_profile|ts_linkedin_member_profile):\\(?(?<recruiterId>[\\w_À&-ÿ%-][^,?]+)?/i;\n\n// TODO: this is getting big, refactor...how to pull key matchers\n// from central location instead of appending here\nconst profileUrlIdModuleRegexMap = {\n\tpremiumCompanySearch: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyProfile: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumSavedAccounts: PREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyRecommendedLeads:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyAccountMapEntries:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumCompanyPeopleAlsoViewed:\n\t\tPREMIUM_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tpremiumSavedLeads: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSavedSearch: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSearch: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactProfile: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactRecommendations:\n\t\tPREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactRecommendedLeads:\n\t\tPREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tpremiumContactSimilarLeads: PREMIUM_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tstandardCompanySearch: STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardCompanyProfile: STANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardCompanyPeopleYouMayKnow:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardBlendedSearchCompany:\n\t\tSTANDARD_COMPANY_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\tstandardContactProfile: STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactPeopleYouMayKnow:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactPeopleAlsoViewed:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactRecommendationsReceived:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactRecommendationsGiven:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardContactSearch: STANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\tstandardBlendedSearchContact:\n\t\tSTANDARD_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\n\trecruiterContactProfile: RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactRecommendations:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactSimilarProfiles:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterContactSearch: RECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n\trecruiterSavedContactSearch:\n\t\tRECRUITER_CONTACT_PROFILE_URL_PUBLIC_ID_REG_EXP,\n};\n\nexport function getIdFromProfileUrl(profileUrl, module) {\n\tif (!profileUrl || !module) {\n\t\treturn null;\n\t}\n\n\tconst matchRegExp = profileUrlIdModuleRegexMap[module];\n\tconst publicIdentifierMatchObj = profileUrl.match(matchRegExp);\n\tconst profileId = publicIdentifierMatchObj?.groups?.publicIdentifier;\n\treturn profileId ? decodeURI(profileId) : null;\n}\n\nexport function getMemberIdFromUrn(urn) {\n\tconst memberIdMatchObj = urn.match(GET_MEMBER_ID_FROM_URN_REG_EXP);\n\treturn memberIdMatchObj?.groups?.memberId;\n}\n\nexport function getSalesNavIdFromUrn(urn) {\n\tconst salesNavIdMatchObj = urn.match(SALES_NAV_ID_FROM_URN_REG_EXP);\n\treturn salesNavIdMatchObj?.groups?.salesNavId;\n}\n\nexport function getRecruiterIdFromUrn(urn) {\n\tconst recruiterIdMatchObj = urn.match(RECRUITER_CONTACT_FROM_URN_REG_EXP);\n\treturn recruiterIdMatchObj?.groups?.recruiterId;\n}\n\n// parses the salesnav style urn now used in new li basic graphQL data to get the id and data type from it.\n// creating this as a separate function from getSalesNavIdFromUrn for now as we try to move towards a new\n// structure of processing the data.\nexport function parseElementUrn(urn) {\n\tconst elementUrnMatchObj = urn.match(SALES_NAV_ID_FROM_URN_REG_EXP);\n\tconst { salesNavId, type } = elementUrnMatchObj?.groups || {};\n\treturn {\n\t\tliSalesNavId: salesNavId || '',\n\t\telementType: type || '',\n\t};\n}\n","import { getMemberIdFromUrn } from 'workers/processExtractedData/utils/identifiers';\nimport ensureArray from '@seamless/core/src/utils/ensureArray';\nimport { cleanLocationString } from 'utils/data';\n\nconst formatContactPosition = (position) => {\n\tconst {\n\t\tcompany,\n\t\tcompanyName,\n\t\tcompanyUrn,\n\t\tcompanyUrnResolutionResult,\n\t\tcompanyResolutionResult,\n\t\tcurrent,\n\t\tdateRange,\n\t\tdescription,\n\t\t// Used for filtering out duplicates and not filtering out the rare type of same position\n\t\t// but one being \"contract\" to \"full-time\", ie. https://www.linkedin.com/in/alyssa-muscarello/\n\t\t'*employmentType': employmentType,\n\t\tendDateOn,\n\t\tendedOn,\n\t\tlocation,\n\t\tlocationName,\n\t\tstartDateOn,\n\t\tstartedOn,\n\t\ttitle,\n\t} = position;\n\n\tconst { industry, location: companyUrnLocation } =\n\t\tcompanyUrnResolutionResult || {};\n\n\tconst { industries: _industries } = companyResolutionResult || {};\n\n\tconst {\n\t\tstart: _dateRangeStart,\n\t\tstartDate: _dateRangeStartDate,\n\t\tend: _dateRangeEndDate,\n\t\tendDate: _dateRangeEnd,\n\t} = dateRange || {};\n\n\tconst _companyUrn =\n\t\t(company && typeof company === 'string' && company) || companyUrn;\n\n\tconst startDate =\n\t\t_dateRangeStart || _dateRangeStartDate || startDateOn || startedOn;\n\tconst endDate = _dateRangeEnd || _dateRangeEndDate || endDateOn || endedOn;\n\n\tlet _location = location?.displayName ?? location;\n\tif (!_location && companyUrnLocation) {\n\t\t_location = companyUrnLocation;\n\t}\n\n\tif (!_location && locationName) {\n\t\t_location = locationName;\n\t}\n\n\tlet industries;\n\tif (_industries) {\n\t\tindustries = ensureArray(_industries);\n\t} else if (industry) {\n\t\tindustries = ensureArray(industry);\n\t}\n\n\treturn {\n\t\tcompanyName: companyName?.trim(),\n\t\tcurrent,\n\t\tdescription,\n\t\temploymentType,\n\t\tendDate:\n\t\t\tendDate &&\n\t\t\ttypeof endDate === 'object' &&\n\t\t\tObject.keys(endDate).length\n\t\t\t\t? {\n\t\t\t\t\t\t...(endDate.month && { month: endDate.month }),\n\t\t\t\t\t\t...(endDate.year && { year: endDate.year }),\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\tfullString: _location && cleanLocationString(_location),\n\t\tindustries:\n\t\t\tindustries && Array.isArray(industries) && industries.length\n\t\t\t\t? industries\n\t\t\t\t: null,\n\t\tlinkedInCompanyId: _companyUrn && getMemberIdFromUrn(_companyUrn),\n\t\tstartDate:\n\t\t\tstartDate &&\n\t\t\ttypeof startDate === 'object' &&\n\t\t\tObject.keys(startDate).length\n\t\t\t\t? {\n\t\t\t\t\t\t...(startDate.month && { month: startDate.month }),\n\t\t\t\t\t\t...(startDate.year && { year: startDate.year }),\n\t\t\t\t  }\n\t\t\t\t: null,\n\t\ttitleName: title,\n\t};\n};\n\nconst formatOccupationSnippet = (snippetText) => {\n\tlet occupation;\n\n\tconst occupationParts = snippetText.match(\n\t\t/^current:\\s(.*)(\\s-\\s\\.\\.\\..*)?$/i\n\t);\n\tif (occupationParts?.length) {\n\t\t[, occupation] = occupationParts;\n\t}\n\n\treturn occupation;\n};\n\n/**\n * Parses an occupation string into company name and title\n * @param {String} occupation\n * @return {Object} { companyName, title }\n */\nconst parsePositionFromOccupationString = (occupation) => {\n\tconst occupationParts =\n\t\toccupation &&\n\t\t((occupation.indexOf(' at ') > -1 && occupation.split(' at ')) ||\n\t\t\t(occupation.indexOf(' @ ') > -1 && occupation.split(' @ ')) ||\n\t\t\t(occupation.indexOf(' - ') > -1 && occupation.split(' - ')));\n\n\tlet companyName;\n\tlet title;\n\n\tif (!occupationParts) {\n\t\ttitle = occupation;\n\t} else {\n\t\tcompanyName =\n\t\t\t!occupationParts?.length || occupationParts.length === 1\n\t\t\t\t? undefined\n\t\t\t\t: occupationParts.pop();\n\t\ttitle = !occupationParts?.length\n\t\t\t? undefined\n\t\t\t: occupationParts.join(' ');\n\t}\n\n\treturn { companyName, title };\n};\n\nconst getPositionsFromGroupedWorkExperience = (groupedWorkExperience) => {\n\tconst positions = groupedWorkExperience.reduce(\n\t\t(groupedPositionsArr, arrItem) => {\n\t\t\tlet positionsArr = groupedPositionsArr;\n\t\t\tconst groupPositions = arrItem.positions;\n\t\t\tpositionsArr = [...(positionsArr || []), ...(groupPositions || [])];\n\t\t\treturn positionsArr;\n\t\t},\n\t\t[]\n\t);\n\treturn positions;\n};\n\nexport {\n\tformatContactPosition,\n\tformatOccupationSnippet,\n\tparsePositionFromOccupationString,\n\tgetPositionsFromGroupedWorkExperience,\n};\n","export default function getCurrentPositions(positions) {\n\treturn positions.filter((p) => {\n\t\treturn (!p.endDate && p.startDate) || p.current;\n\t});\n}\n","// TODO: This was copied from `@seamless/core` and should be replaced with the version there\n// when that package has better code splitting support, b/c currently the build throws\n// errors when an imported method is used in a web worker.\n//\n// If this is to be imported anywhere other than a web worker, use the module from '@seamless/core'\n\n/**\n * Check if value is the language type of Object\n * @param {any} val - The value to test\n * @return {boolean} - True if the value is an Object, otherwise false.\n * example\n * isObject({}); // -> true\n * isObject([]); // -> true\n */\nconst isObject = (val) => {\n\tconst type = typeof val;\n\treturn !!val && (type === 'function' || type === 'object');\n};\n\nexport default isObject;\n","import isEmpty from 'utils/coreDupes/isEmpty';\n\nconst hasResults = (data) => Array.isArray(data) && !isEmpty(data);\n\nexport default hasResults;\n","// TODO: This was copied from `@seamless/core` and should be replaced with the version there\n// when that package has better code splitting support, b/c currently the build throws\n// errors when an imported method is used in a web worker.\n//\n// If this is to be imported anywhere other than a web worker, use the module from '@seamless/core'\n\nimport isObject from './isObject';\n\n/**\n * Check if value is an empty object or array.\n * @param {any} val - The value to check\n * @return {boolean} - True if the value is empty\n * example\n * isEmpty([]); // -> true\n * isEmpty({}); // -> true\n */\nconst isEmpty = (val) => {\n\tif (val == null) {\n\t\treturn true;\n\t}\n\n\tif (Array.isArray(val)) {\n\t\treturn val.length === 0;\n\t}\n\n\treturn isObject(val) && Object.keys(val).length === 0;\n};\n\nexport default isEmpty;\n","const isValidString = (possibleString) =>\n\tBoolean(typeof possibleString === 'string' && possibleString.length);\n\nexport default isValidString;\n","import { formatEmailAddress } from 'workers/processExtractedData/utils/contactInfo';\nimport formatProfilePicture from 'workers/processExtractedData/utils/formatProfilePicture';\nimport formatContactIndustries from 'workers/processExtractedData/utils/industries';\nimport {\n\tformatContactEducations,\n\tformatContactLanguages,\n\tformatContactSkills,\n} from 'workers/processExtractedData/utils/experience';\nimport {\n\tformatContactPosition,\n\tparsePositionFromOccupationString,\n} from 'workers/processExtractedData/utils/occupation';\nimport { cleanEmptyNullData, cleanLocationString, cleanUrl } from 'utils/data';\nimport getCurrentPositions from 'utils/getCurrentPositions';\nimport hasResults from 'utils/hasResults';\nimport isValidString from 'utils/isValidString';\nimport uniqueBy from 'utils/collection';\n\n// TODO: move these to a config file\nconst STANDARD_CONTACT_PROFILE_URL_BASE = 'https://www.linkedin.com/in/';\nconst PREMIUM_CONTACT_PROFILE_URL_BASE = 'https://www.linkedin.com/sales/lead/';\nconst RECRUITER_CONTACT_PROFILE_URL_BASE =\n\t'https://www.linkedin.com/talent/search/profile/';\n\nfunction setCompanyNameAndTitle(profile) {\n\tconst _profile = profile;\n\n\tlet companyName;\n\tlet title;\n\tif (hasResults(_profile.positions)) {\n\t\tconst currentPositions = getCurrentPositions(_profile.positions);\n\t\tif (hasResults(currentPositions)) {\n\t\t\t_profile.companyName = currentPositions[0].companyName;\n\t\t\t_profile.title = currentPositions[0].titleName;\n\t\t}\n\t}\n\n\tif ((!_profile.companyName || !_profile.title) && _profile.occupation) {\n\t\t({ companyName, title } = parsePositionFromOccupationString(\n\t\t\t_profile.occupation\n\t\t));\n\t\tif (companyName) {\n\t\t\t_profile.companyName = companyName;\n\t\t}\n\n\t\tif (title) {\n\t\t\t_profile.title = title;\n\t\t}\n\t}\n\n\tif (hasResults(_profile.positions)) {\n\t\tconst currentPositions = getCurrentPositions(_profile.positions);\n\t\tif (\n\t\t\thasResults(currentPositions) &&\n\t\t\t(_profile.companyName !== currentPositions[0].companyName ||\n\t\t\t\t_profile.title !== currentPositions[0].titleName)\n\t\t) {\n\t\t\t_profile.companyName = currentPositions[0].companyName;\n\t\t\t_profile.title = currentPositions[0].titleName;\n\t\t}\n\t}\n\n\treturn _profile;\n}\n\n/**\n * Format the data from a parsed contact object into a Seamless.AI contact object\n * @param {Object} data - Object of parsed contact data\n * @return {Object} Seamless.AI expected contact object format\n */\nconst createSeamlessContact = (data) => {\n\tconst {\n\t\t// LinkedIn Identifiers\n\t\tliMemberId,\n\t\tpublicIdentifier,\n\t\tsalesNavIdentifier,\n\t\trecruiterIdentifier,\n\n\t\t// LinkedIn Profile URLs\n\t\tflagshipProfileUrl,\n\n\t\t// Entity info\n\t\tfirstName,\n\t\tlastName,\n\t\tfullName,\n\t\tbirthDateOn,\n\t\tprofilePicture,\n\t\tsummary,\n\n\t\t// Contact info\n\t\temails,\n\t\tphoneNumbers,\n\t\tprimaryEmail,\n\t\tlocation,\n\t\tsocial,\n\n\t\t// Personal info\n\t\tawards,\n\t\tcertifications,\n\t\tcourses,\n\t\teducations,\n\t\tindustries,\n\t\tlanguages,\n\t\torganizations,\n\t\tpatents,\n\t\tprojects,\n\t\tpublications,\n\t\tskills,\n\t\tvolunteeringExperiences,\n\n\t\t// JobInfo\n\t\toccupation,\n\t\tpositions,\n\t} = data;\n\n\tlet contactName = fullName;\n\tif (!contactName?.length && firstName && lastName) {\n\t\tcontactName = `${firstName} ${lastName}`;\n\t}\n\tconst liProfileUrl =\n\t\tflagshipProfileUrl ||\n\t\t(publicIdentifier &&\n\t\t\t`${STANDARD_CONTACT_PROFILE_URL_BASE}${publicIdentifier}`);\n\tconst liSalesNavUrl =\n\t\tsalesNavIdentifier &&\n\t\t`${PREMIUM_CONTACT_PROFILE_URL_BASE}${salesNavIdentifier}`;\n\tconst liRecruiterUrl =\n\t\trecruiterIdentifier &&\n\t\t`${RECRUITER_CONTACT_PROFILE_URL_BASE}${recruiterIdentifier}`;\n\n\tlet _positions = hasResults(positions)\n\t\t? positions.map(\n\t\t\t\t(position) =>\n\t\t\t\t\ttypeof position === 'object' &&\n\t\t\t\t\tObject.keys(position).length &&\n\t\t\t\t\tformatContactPosition(position)\n\t\t  )\n\t\t: null;\n\n\tif (hasResults(_positions)) {\n\t\t// remove empty\n\t\t_positions = _positions.filter(\n\t\t\t(pos) => !!pos?.companyName && !!pos?.titleName\n\t\t);\n\t\t_positions = uniqueBy(_positions, [\n\t\t\t'companyName',\n\t\t\t'titleName',\n\t\t\t'employmentType',\n\t\t]);\n\t}\n\n\tlet companyName;\n\tlet title;\n\n\tif (occupation) {\n\t\t({ companyName, title } =\n\t\t\tparsePositionFromOccupationString(occupation));\n\t}\n\n\tif (!companyName && positions?.length) {\n\t\tconst latestPosition = positions[0]; // the latest position may not always be the first one. if not, use startDate\n\t\tcompanyName = latestPosition.companyName;\n\t}\n\n\tlet person = {\n\t\t// LinkedIn Identifiers\n\t\tliMemberId,\n\t\tliPublicIdentifier: publicIdentifier && decodeURI(publicIdentifier),\n\t\tliSalesNavId: salesNavIdentifier,\n\t\tliRecruiterId: recruiterIdentifier,\n\n\t\t// LinkedIn Profile URLs\n\t\tliProfileUrl: isValidString(liProfileUrl)\n\t\t\t? cleanUrl(liProfileUrl)\n\t\t\t: null,\n\t\tliSalesNavUrl: isValidString(liSalesNavUrl)\n\t\t\t? cleanUrl(liSalesNavUrl)\n\t\t\t: null,\n\t\tliRecruiterUrl: isValidString(liRecruiterUrl)\n\t\t\t? cleanUrl(liRecruiterUrl)\n\t\t\t: null,\n\n\t\t// Entity Info\n\t\tfirstName,\n\t\tlastName,\n\t\tcontactName,\n\t\tbirthday: birthDateOn,\n\t\tliImageUrl: profilePicture && formatProfilePicture(profilePicture),\n\n\t\t// Contact info\n\t\tcontactEmail: formatEmailAddress(emails, primaryEmail),\n\t\tphoneNumbers,\n\t\tlocationFullString: isValidString(location)\n\t\t\t? cleanLocationString(location)\n\t\t\t: null,\n\t\tsocial,\n\n\t\t// Personal info\n\t\t...(summary && { meta: { summary } }),\n\t\tawards: hasResults(awards) ? awards : null,\n\t\tcertifications: hasResults(certifications) ? certifications : null,\n\t\tcourses: hasResults(courses) ? courses : null,\n\t\teducations: hasResults(educations)\n\t\t\t? formatContactEducations(educations)\n\t\t\t: null,\n\t\tindustries: formatContactIndustries(industries),\n\t\tlanguages: hasResults(languages)\n\t\t\t? formatContactLanguages(languages)\n\t\t\t: null,\n\t\torganizations: hasResults(organizations) ? organizations : null,\n\t\tpatents: hasResults(patents)\n\t\t\t? patents.filter((patent) => !!patent)\n\t\t\t: null,\n\t\tprojects: hasResults(projects)\n\t\t\t? projects.filter((project) => !!project)\n\t\t\t: null,\n\t\tpublications: hasResults(publications)\n\t\t\t? publications.filter((publication) => !!publication)\n\t\t\t: null,\n\t\tskills: hasResults(skills) ? formatContactSkills(skills) : null,\n\t\tvolunteeringExperiences: hasResults(volunteeringExperiences)\n\t\t\t? volunteeringExperiences\n\t\t\t: null,\n\n\t\t// Job info\n\t\tcompanyName,\n\t\ttitle,\n\t\t// company: {\n\t\t// \tname: companyName,\n\t\t// \ttitle,\n\t\t// },\n\t\toccupation,\n\t\tpositions: _positions,\n\t\titemType: 'contact',\n\t};\n\n\tperson = setCompanyNameAndTitle(person);\n\tperson = cleanEmptyNullData(person);\n\treturn person;\n};\n\nexport default createSeamlessContact;\n","// Vanilla JS equivalent to Lodash _uniqBy\nconst uniqueBy = (arr, keys) => {\n\tconst obj = arr.reduce((ac, a) => {\n\t\tconst keyString = keys.map((k) => a[k]).join('-');\n\t\tconst current = ac;\n\t\tcurrent[keyString] = a;\n\t\treturn current;\n\t}, {});\n\n\treturn Object.values(obj);\n};\n\nexport default uniqueBy;\n","import { expose } from 'comlink';\nimport createSeamlessContact from 'workers/processExtractedData/utils/createSeamlessContact';\nimport {\n\tgetMemberIdFromUrn,\n\tgetSalesNavIdFromUrn,\n} from 'workers/processExtractedData/utils/identifiers';\n\nconst LI_CDN = 'https://media-exp2.licdn.com/media';\n\nfunction cleanLocationString(locationString) {\n\treturn (\n\t\tlocationString\n\t\t\t// Replace line breaks\n\t\t\t.replace(/(\\r\\n|\\n|\\r)/gm, ' ')\n\t\t\t.replace(/^Greater /, '')\n\t\t\t.replace(/ Area$/, '')\n\t\t\t.replace(/ Metropolitan$/, '')\n\t);\n}\n\n/**\n * It returns the path to a logo in a linkedin response.\n * @param  {Object} logo logo object of a linkedin entity.\n * @return {String}\n */\nfunction scrubPathToResource(resource) {\n\tif (resource.constructor !== Object) {\n\t\treturn '';\n\t}\n\n\tconst key = Object.keys(resource)[0];\n\tlet resourcePath = resource[key].id || '';\n\n\tif (resourcePath) {\n\t\tresourcePath = `${LI_CDN}${resourcePath}`;\n\t}\n\n\treturn resourcePath;\n}\n\n/**\n * Scrubs member object in LinkedIn Response\n * @param  {Object} member member object\n * @return {Object}\n */\nfunction scrubMemberInfo(member = {}) {\n\tconst {\n\t\tmember: {\n\t\t\tfirstName = '',\n\t\t\tlastName = '',\n\t\t\toccupation = '',\n\t\t\tpublicIdentifier = '',\n\t\t\tpicture,\n\t\t} = {},\n\t} = member || {};\n\n\treturn {\n\t\tfirstname: firstName,\n\t\tlastname: lastName,\n\t\toccupation,\n\t\tpublicIdentifier,\n\t\tpicture: picture && scrubPathToResource(picture),\n\t};\n}\n\n/**\n * Scrubs patent information from LinkedIn Response.\n * @param  {Object} patent\n * @return {Object}\n */\nfunction scrubPatentInfo(patent) {\n\tconst patentInfo = {\n\t\tapplicationNumber: patent.applicationNumber || '',\n\t\tdescription: patent.description || '',\n\t\tfilingDate: patent.filingDate || {},\n\t\tissueDate: patent.issueDate || {},\n\t\tnumber: patent.number || '',\n\t\tpending: patent.pending,\n\t\ttitle: patent.title || '',\n\t\turl: patent.url || '',\n\t};\n\n\tif (patent.hasOwnProperty('inventors') && patent.inventors.length > 0) {\n\t\tpatentInfo.inventors = patent.inventors\n\t\t\t.filter((inventor) => inventor.hasOwnProperty('member'))\n\t\t\t.map((inventor) => scrubMemberInfo(inventor.member));\n\t}\n\n\treturn patentInfo;\n}\n\n/**\n * Scrubs publication information from LinkedIn response.\n * @param  {Object} publication\n * @return {Object}\n */\nfunction scrubPublicationInfo(publication) {\n\tconst publicationInfo = {\n\t\tdate: publication.date || {},\n\t\tdescription: publication.description || '',\n\t\tname: publication.name || '',\n\t\tpublisher: publication.publisher || '',\n\t\turl: publication.url || '',\n\t};\n\n\tif (\n\t\tpublication.hasOwnProperty('authors') &&\n\t\tpublication.authors.length > 0\n\t) {\n\t\tpublicationInfo.authors = publication.authors.map((author) =>\n\t\t\tscrubMemberInfo(author)\n\t\t);\n\t}\n\n\treturn publicationInfo;\n}\n\n/**\n * Scrubs project information from LinkedIn response.\n * @param  {Object} project\n * @return {Object}\n */\nfunction scrubProjectInfo(project) {\n\tconst projectInfo = {\n\t\tdescription: project.description || '',\n\t\ttimePeriod: project.timePeriod || {},\n\t\ttitle: project.title || '',\n\t\turl: project.url || '',\n\t};\n\n\tconst contactProject = project;\n\n\tif (project.hasOwnProperty('members') && project.members.length > 0) {\n\t\tcontactProject.members = project.members.map((member) =>\n\t\t\tscrubMemberInfo(member)\n\t\t);\n\t}\n\n\treturn projectInfo;\n}\n\n/**\n * Scrubs position information from LinkedIn response.\n * @param  {Object} position\n * @return {Object}\n */\nfunction scrubPositionInfo(position) {\n\tlet linkedInCompanyId = '';\n\n\tif (position.companyUrn) {\n\t\tconst pieces = position.companyUrn.split(':');\n\t\tlinkedInCompanyId = parseInt(pieces[pieces.length - 1], 10);\n\t}\n\n\tconst positionInfo = {\n\t\tlocationName: position.locationName || '',\n\t\tcompanyName: position.companyName || '',\n\t\tlinkedInCompanyId,\n\t\tdescription: position.description || '',\n\t\tdateRange: position.timePeriod || {},\n\t\ttitle: position.title || '',\n\t};\n\n\tif (position.hasOwnProperty('company')) {\n\t\tpositionInfo.company = {\n\t\t\temployeeCountRange: position.company.employeeCountRange || {},\n\t\t\tindustries: position.company.industries || [],\n\t\t};\n\n\t\tif (\n\t\t\tposition.company.hasOwnProperty('miniCompany') &&\n\t\t\tposition.company.miniCompany.hasOwnProperty('logo')\n\t\t) {\n\t\t\tpositionInfo.company.logo = scrubPathToResource(\n\t\t\t\tposition.company.miniCompany.logo\n\t\t\t);\n\t\t}\n\t}\n\n\treturn positionInfo;\n}\n\n/**\n * Scrubs education information from LinkedIn response.\n * @param  {Object} education\n * @return {Object}\n */\nfunction scrubEducationInfo(education) {\n\tconst educationInfo = {\n\t\tactivities: education.activities || '',\n\t\tdegreeName: education.degreeName || '',\n\t\tfieldOfStudy: education.fieldOfStudy || '',\n\t\tdateRange: education.timePeriod || {},\n\t\tschoolName: education.schoolName || '',\n\t};\n\n\tif (education.hasOwnProperty('school')) {\n\t\teducationInfo.school = {\n\t\t\tactive: education.school.active || false,\n\t\t\tname: education.school.schoolName || '',\n\t\t};\n\n\t\tif (education.school.hasOwnProperty('logo')) {\n\t\t\teducationInfo.school.logo = scrubPathToResource(\n\t\t\t\teducation.school.logo\n\t\t\t);\n\t\t}\n\t}\n\n\treturn educationInfo;\n}\n\n/**\n * Scrubs website info from contactInfo LinkedIn response.\n * @param  {Object} website\n * @return {Object}\n */\nfunction scrubWebsiteInfo(website) {\n\tconst categoryType = Object.keys(website.type)[0];\n\n\treturn {\n\t\twebsite: website.url,\n\t\ttype: website.type[categoryType].category || 'Portfolio',\n\t};\n}\n\n/**\n * Takes a response from LinkedIn API. Manipulate its fields, tags the source\n * and returns an object that can be saved in our backend.\n * @param  {Object} profile LinkedIn Profile Information.\n * @return {Object} Object that matches SocialProfile schema.\n */\nfunction processStandardContactFallbackData(data) {\n\tconst {\n\t\tprofile: {\n\t\t\tfirstName = '',\n\t\t\tlastName = '',\n\t\t\theadline = '',\n\t\t\tcompanyName = '',\n\t\t\tindustryName = '',\n\t\t\tsummary = '',\n\t\t\tlocationName = '',\n\t\t\tpictureInfo: { masterImage } = {},\n\t\t\tminiProfile: {\n\t\t\t\toccupation,\n\t\t\t\tpicture: miniProfPic,\n\t\t\t\tpublicIdentifier,\n\t\t\t\tobjectUrn,\n\t\t\t\tentityUrn,\n\t\t\t} = {},\n\t\t\taddress = '',\n\t\t\tpicture = '',\n\t\t} = {},\n\t\temailAddress,\n\t\tbirthDateOn = {},\n\t\tphoneNumbers = [],\n\t\ttwitterHandles = [],\n\t\teducationView: { elements: eduElements = [] } = {},\n\t\tpatentView: { elements: patElements = [] } = {},\n\t\tpublicationView: { elements: pubElements = [] } = {},\n\t\tprojectView: { elements: proElements = [] } = {},\n\t\tpositionView: { elements: posElements = [] } = {},\n\t\tlanguageView: { elements: lanElements = [] } = {},\n\t\tskillView: { elements: skiElements = [] } = {},\n\t\twebsites = [],\n\t} = data;\n\n\tconst personOpts = {\n\t\t// LinkedIn Identifiers\n\t\tliMemberId: getMemberIdFromUrn(objectUrn),\n\t\tpublicIdentifier,\n\t\tsalesNavIdentifier: getSalesNavIdFromUrn(entityUrn),\n\t\tsource: 'LinkedIn',\n\t\tfirstname: firstName,\n\t\tfirstName,\n\t\tlastname: lastName,\n\t\tlastName,\n\t\theadline,\n\t\tcompanyName,\n\t\tindustries:\n\t\t\tindustryName && typeof industryName === 'string'\n\t\t\t\t? [industryName]\n\t\t\t\t: null,\n\t\tsummary,\n\t\tlocation:\n\t\t\tlocationName && locationName.length\n\t\t\t\t? cleanLocationString(locationName)\n\t\t\t\t: null,\n\t\temailAddress,\n\t\toccupation,\n\t\taddress,\n\t\tbirthdate: birthDateOn,\n\t\tphoneNumbers,\n\t\ttwitterHandles: twitterHandles.map((twitter) => twitter.name),\n\t\tprofilePicture: masterImage ? `${LI_CDN}${masterImage}` : picture,\n\t\teducations: eduElements.map(scrubEducationInfo),\n\t\tpatents: patElements.map(scrubPatentInfo),\n\t\tpublications: pubElements.map(scrubPublicationInfo),\n\t\tprojects: proElements.map(scrubProjectInfo),\n\t\tpositions: posElements.map(scrubPositionInfo),\n\t\tlanguages: lanElements.map((language) => language.name),\n\t\tskills: skiElements.map((skill) => skill.name),\n\t\twebsites: websites.map(scrubWebsiteInfo),\n\t};\n\n\tif ((personOpts.picture === '' || !personOpts.picture) && miniProfPic) {\n\t\tconst keys = Object.keys(miniProfPic);\n\t\tconst picObj = miniProfPic[keys[0]];\n\n\t\tif (\n\t\t\tpicObj &&\n\t\t\tpicObj.rootUrl &&\n\t\t\tArray.isArray(picObj.artifacts) &&\n\t\t\tpicObj.artifacts[0]\n\t\t) {\n\t\t\tpersonOpts.picture =\n\t\t\t\tpicObj.rootUrl +\n\t\t\t\tpicObj.artifacts[picObj.artifacts.length - 1]\n\t\t\t\t\t.fileIdentifyingUrlPathSegment;\n\t\t\tpersonOpts.profilePicture = personOpts.picture;\n\t\t}\n\t}\n\n\tconst currentPositions =\n\t\tposElements.filter(\n\t\t\t(p) =>\n\t\t\t\tp.hasOwnProperty('timePeriod') &&\n\t\t\t\tp.timePeriod.hasOwnProperty('startDate') &&\n\t\t\t\t!p.timePeriod.hasOwnProperty('endDate')\n\t\t) || [];\n\tconst currentPosition = currentPositions[0] || {};\n\n\t// there seems to be a bug with LinkedIns API where headline and occupation\n\t// are identical. Occupation should be current title at current company.\n\tif (personOpts.headline === personOpts.occupation && posElements.length) {\n\t\tpersonOpts.occupation = currentPosition.title || '';\n\t}\n\n\tpersonOpts.companyName = currentPosition.companyName;\n\tif (\n\t\tpersonOpts.occupation?.trim()?.toLowerCase() ===\n\t\tpersonOpts.headline?.trim()?.toLowerCase()\n\t) {\n\t\tpersonOpts.occupation = currentPosition.title;\n\t}\n\n\tconst person = createSeamlessContact(personOpts);\n\tperson.pageSectionSourced = 'standardContactProfile';\n\tperson.itemType = 'contact';\n\n\treturn {\n\t\tparsedItems: [person],\n\t};\n}\n\nexpose(processStandardContactFallbackData);\n"],"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","throwMarker","val","transferHandlers","Map","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","value","serialized","Error","isError","message","name","stack","Object","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfers","transferCache","set","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","throwIfProxyReleased","isReleased","isProxyReleased","Proxy","get","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","WeakMap","handler","serializedValue","msg","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","formatEmailAddress","emails","primaryEmail","emailAddress","isArray","err","cleanEmptyNullData","cleanedData","entries","forEach","k","keys","splice","cleanLocationString","locationString","replace","cleanUrl","url","newUrl","trim","test","profilePicture","picture","artifacts","rootUrl","includes","fileIdentifyingUrlPathSegment","industries","formattedIndustries","values","ind","industry","push","formatContactEducations","educations","filter","education","schoolName","degree","degreeName","activities","fieldOfStudy","dateRange","year","dateRangeStartYear","end","dateRangeEndYear","startedOn","startedOnYear","endedOn","endedOnYear","endDateOn","endDateOnYear","startDateOn","startDateOnYear","startDateYear","endDateYear","startYear","endYear","fieldsOfStudy","educationFieldOfStudy","companyName","ensureArray","startDate","endDate","formatContactSkills","skills","skillsArr","skill","_skills","formatContactLanguages","languages","languagesArr","language","_languages","GET_MEMBER_ID_FROM_URN_REG_EXP","SALES_NAV_ID_FROM_URN_REG_EXP","getMemberIdFromUrn","urn","match","groups","memberId","parsePositionFromOccupationString","occupation","occupationParts","indexOf","split","title","pop","getCurrentPositions","positions","current","isObject","possibleString","Boolean","liMemberId","publicIdentifier","salesNavIdentifier","recruiterIdentifier","flagshipProfileUrl","firstName","lastName","fullName","birthDateOn","summary","phoneNumbers","location","social","awards","certifications","courses","organizations","patents","projects","publications","volunteeringExperiences","contactName","liProfileUrl","liSalesNavUrl","liRecruiterUrl","_positions","hasResults","position","company","companyUrn","companyUrnResolutionResult","companyResolutionResult","description","employmentType","locationName","companyUrnLocation","_industries","_dateRangeStart","_dateRangeStartDate","_dateRangeEndDate","_dateRangeEnd","_companyUrn","_location","displayName","month","fullString","linkedInCompanyId","titleName","formatContactPosition","pos","ac","a","uniqueBy","person","liPublicIdentifier","decodeURI","liSalesNavId","liRecruiterId","isValidString","birthday","liImageUrl","formatProfilePicture","contactEmail","locationFullString","meta","formatContactIndustries","patent","project","publication","itemType","profile","_profile","currentPositions","setCompanyNameAndTitle","LI_CDN","scrubPathToResource","resource","resourcePath","scrubMemberInfo","member","firstname","lastname","scrubPatentInfo","patentInfo","applicationNumber","filingDate","issueDate","number","pending","hasOwnProperty","inventors","inventor","scrubPublicationInfo","publicationInfo","date","publisher","authors","author","scrubProjectInfo","projectInfo","timePeriod","contactProject","members","scrubPositionInfo","pieces","parseInt","positionInfo","employeeCountRange","miniCompany","logo","scrubEducationInfo","educationInfo","school","active","scrubWebsiteInfo","website","categoryType","category","headline","industryName","pictureInfo","masterImage","miniProfile","miniProfPic","objectUrn","entityUrn","address","twitterHandles","educationView","elements","eduElements","patentView","patElements","publicationView","pubElements","projectView","proElements","positionView","posElements","languageView","lanElements","skillView","skiElements","websites","personOpts","salesNavId","source","birthdate","twitter","picObj","currentPosition","toLowerCase","createSeamlessContact","pageSectionSourced","parsedItems"],"sourceRoot":""}